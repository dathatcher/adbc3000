RECSIZE=80;BLOCKFACTOR=16;CODE=0;EXTENTS=16;FILESIZE=2429;ASCII;FORMAT=FÃ¿$CONTROL STANDARD_LEVEL SYSTEM, LIST,SHORT                             
00001000C   $CODE_OFFSETS ON                                                   
00002000C---$CHECK_ACTUAL_PARM 2                                                
00003000      PROGRAM FBK001                                                    
00004000      IMPLICIT NONE                                                    
00005000                                                                        
00006000      CALL MAIN                                                         
00007000      STOP                                                              
00008000      END                                                               
00009000                                                                        
00010000      LOGICAL FUNCTION ISERROR( RESULT, LOC )                          
00011000      IMPLICIT NONE                                                     
00012000                                                                        
00013000      SYSTEM INTRINSIC IPCERRMSG                                        
00014000                                                                        
00015000      INTEGER*4 RESULT, NEWRESULT, LN                                   
00016000      INTEGER*2 LOC                                                     
00017000      CHARACTER ERR*80                                                  
00018000                                                                        
00019000      ISERROR = .FALSE.                                                
00020000      IF ( RESULT .NE. 0) THEN                                          
00021000        IF ( RESULT .NE. 64 ) THEN                                      
00022000          PRINT *,"CHILD IPC ERROR, RESULT = ", RESULT," LOC = ", LOC   
00023000          CALL IPCERRMSG( RESULT, ERR, LN, NEWRESULT )                  
00024000          PRINT *,"ERR=", ERR                                           
00025000        ENDIF                                                           
00026000        ISERROR = .TRUE.                                                
00027000      ELSE                                                              
00028000C       PRINT *,"ISERROR - NOERROR, LOC = ",LOC                         
00029000      ENDIF                                                             
00030000                                                                        
00031000      RETURN                                                           
00032000      END                                                               
00033000                                                                        
00034000                                                                        
00035000                                                                        
00036000      SUBROUTINE DBOPENXX()                                             
00037000      IMPLICIT NONE                                                     
00038000                                                                        
00039000$INCLUDE 'TURBOCOM.ADBC211'                                             
00040000                                                                        
00041000      CHARACTER DBASE*30,CPASSWORD*10                                   
00042000      INTEGER PASSWORD(5), ERROR, MODE                                  
00043000      EQUIVALENCE (PASSWORD,CPASSWORD)                                  
00044000      EQUIVALENCE (DBASE,BASE)                                          
00045000                                                                        
00046000      DBASE = "  " // BIC_(3:28) // ";"                                 
00047000      CPASSWORD = BIC_(29:36)                                           
00048000      MODE = BI_(19)                                                    
00049000C       DBASE="  FINDB.FDATABAS;"                                       
00050000C       CPASSWORD="ASK       "                                          
00051000C     PRINT *,"OPENING DATABASE: ",BIC_(3:28)                           
00052000C     PRINT *,"PASSWORD: ",PASSWORD                                     
00053000C     PRINT *,"MODE: ", MODE                                            
00054000                                                                        
00055000      CALL DBOPEN(BASE,PASSWORD,MODE,STATS)                             
00056000      BO_(2) = STATS(1)                                                 
00057000      BO_(3) = BASE(1)                                                  
00058000                                                                        
00059000C     PRINT *,"BASE(1)=",BASE(1)                                        
00060000C     PRINT *,"STATS(1)=",STATS(1)                                      
00061000                                                                        
00062000      BO_(1) = 4    !-SET PACKET_SIZE                                   
00063000      CALL SENDPACKET( 6 )                                              
00064000                                                                        
00065000      RETURN                                                            
00066000      END                                                               
00067000                                                                        
00068000                                                                        
00069000      SUBROUTINE GETDATASETS()                                          
00070000      IMPLICIT NONE                                                     
00071000                                                                        
00072000$INCLUDE 'TURBOCOM.ADBC211'                                             
00073000                                                                        
00074000      INTEGER*2 BUFFER(200), BUFFER2(24), IDUM                          
00075000      INTEGER*2 I,J,K,DSI                                               
00076000                                                                        
00077000      BASE(1) = BI_(2)                                                  
00078000                                                                        
00079000      CALL DBINFO(BASE,IDUM,203,STATS,BUFFER)                           
00080000      IF (STATS(1).NE.0) THEN                                           
00081000        PRINT *,"DBINFO ERROR FOR MODE 203, ",STATS(1)                  
00082000        GOTO 800                                                        
00083000      ENDIF                                                             
00084000                                                                        
00085000      !- BUFFER(1) CONTAINS THE NUMBER OF DATASETS.                     
00086000                                                                        
00087000      BO_(3) = BUFFER(1)                                                
00088000                                                                        
00089000      J = 4                                                             
00090000                                                                        
00091000      DO I=2,BUFFER(1)+1                                                
00092000        !- ADDED DSI AS ABSOLUTE VALUE OF THE DATASET NUMBER.  IF THE   
00093000        !- DATASET NUMBER IS NEGATIVE, THE NEXT DBINFO BOMBS.          
00094000        DSI = ABS(BUFFER(I))                                           
00095000        CALL DBINFO(BASE,DSI,202,STATS,BUFFER2)                        
00096000        IF (STATS(1).NE.0) THEN                                        
00097000          PRINT *,"ERRORS..."                                          
00098000          GOTO 800                                                     
00099000        ENDIF                                                          
00100000        DO K=1,8                                                       
00101000          BO_(J) = BUFFER2(K)                                          
00102000          J = J + 1                                                    
00103000        ENDDO                                                          
00104000      ENDDO                                                            
00105000                                                                       
00106000      J = J - 2                                                        
00107000                                                                       
00108000800   CONTINUE                                                         
00109000                                                                       
00110000      BO_(2) = STATS(1)                                                
00111000                                                                       
00112000      BO_(1) = J * 2       !-PACKET SIZE.                             
00113000      CALL SENDPACKET( (J * 2) + 2 )                                  
00114000                                                                      
00115000      RETURN                                                          
00116000      END                                                             
00117000                                                                      
00118000                                                                      
00119000                                                                        
00120000      SUBROUTINE DATASETINFO()                                          
00121000      IMPLICIT NONE                                                     
00122000                                                                        
00123000$INCLUDE 'TURBOCOM.ADBC211'                                             
00124000                                                                        
00125000      SYSTEM INTRINSIC DBINFO                                           
00126000                                                                        
00127000      CHARACTER DATASET*16                                              
00128000      INTEGER*2 DATASETI(8)
00129000      INTEGER*2 BUFFER(200),I,J,K                                       
00130000      INTEGER*2 BUFFER2(13)                                             
00131000      INTEGER*2 SUBITEMLENGTH,SUBITEMCOUNT                              
00132000      INTEGER*2 DATASETNUMBER, DATASETTYPEI                             
00133000      CHARACTER BUFFERCH*18, DATASETTYPE*1                              
00134000      LOGICAL LERR                                                      
00135000      EQUIVALENCE (DATASET,DATASETI)                                    
00136000      EQUIVALENCE (BUFFER2,BUFFERCH)                                    
00137000      EQUIVALENCE (BUFFER2(10),SUBITEMLENGTH)                           
00138000      EQUIVALENCE (BUFFER2(11),SUBITEMCOUNT)                            
00139000      EQUIVALENCE (DATASETTYPE,DATASETTYPEI)                            
00140000                                                                        
00141000      BASE(1) = BI_(2)                                                  
00142000      DATASET = BIC_(5:20)                                              
00143000C     PRINT *,"DS BASE = ",BASE                                         
00144000C     PRINT *,"DS DATASET = ",DATASET                                   
00145000                                                                        
00146000      I = 1                                                             
00147000C     PRINT *,"====XX================================================"  
00148000C     PRINT *,"DATASET: ",DATASET                                       
00149000                                                                        
00150000      !- GET THE DATASET NUMBER.                                        
00151000                                                                        
00152000      CALL DBINFO(BASE,DATASETI,201,STATS,DATASETNUMBER)                
00153000      IF (STATS(1).NE.0) THEN                                           
00154000        PRINT *,"DATASET ",DATASET," DOES NOT EXIST"                    
00155000        GOTO 800                                                        
00156000      ENDIF                                                             
00157000                                                                        
00158000      !- MAKE SURE THAT THE DATASET NUMBER IS POSITIVE.                 
00159000                                                                        
00160000      DATASETNUMBER = ABS(DATASETNUMBER)                                
00161000                                                                        
00162000      BO_(3) = DATASETNUMBER                                            
00163000                                                                        
00164000      !- GET THE DATABASE TYPE( M, A, D )                               
00165000                                                                        
00166000      CALL DBINFO(BASE,DATASETNUMBER,202,STATS,BUFFER)                  
00167000      IF (STATS(1).NE.0) THEN                                           
00168000        PRINT *,"COULD NOT GET DATABASE TYPE..."                        
00169000        GOTO 800                                                        
00170000      ENDIF                                                             
00171000                                                                        
00172000      BO_(4) = BUFFER(9)                                                
00173000      DATASETTYPEI = BUFFER(9)                                          
00174000                                                                        
00175000      !- GET ALL THE FIELDS IN THE DATASET.                             
00176000                                                                        
00177000      CALL DBINFO(BASE,DATASETNUMBER,104,STATS,BUFFER)                  
00178000      IF (STATS(1).NE.0) THEN                                           
00179000        PRINT *,"SET ITEM ERRORS"                                       
00180000        GOTO 800                                                        
00181000      ENDIF                                                             
00182000                                                                        
00183000      BO_(5) = BUFFER(1)  !- NUMBER OF ITEMS IN DATASET                 
00184000                                                                        
00185000      I = 6                                                             
00186000      DO K=2,BUFFER(1)+1                                                
00187000        !- BE SURE EACH DATASET NUMBER IS POSITIVE.                     
00188000        BUFFER(K) = ABS( BUFFER(K) )                                    
00189000        CALL DBINFO(BASE,BUFFER(K),102,STATS,BUFFER2)                   
00190000C       PRINT *,"         ",BUFFERCH," ",SUBITEMLENGTH," ",             
00191000C    *             SUBITEMCOUNT                                         00192000        BO_(I) = BUFFER(K)  !-FIELD NUMBER.                             00193000        I = I + 1                                                       00194000        DO J=1,11                                                       00195000          BO_(I) = BUFFER2(J)                                           00196000          I = I + 1                                                     00197000        ENDDO                                                           00198000      ENDDO                                                             00199000                                                                        00200000      !- GET THE KEY FIELD ITEMS IN THIS DATASET.                       00201000                                                                        00202000      !2.0.1                                                            00203000      IF ( DATASETTYPE .EQ. "A" .OR. DATASETTYPE .EQ. "M" ) THEN        00204000        CALL DBINFO(BASE,DATASETNUMBER,302,STATS,BUFFER)                00205000        IF (STATS(1).NE.0) THEN                                         00206000          PRINT *,"COULD NOT GET KEYFIELD PATH INFORMATION..."          00207000          GOTO 800                                                      00208000        ENDIF                                                           00209000        BO_(I) = 1                                                      00210000        I = I + 1                                                       00211000        BO_(I) = ABS(BUFFER(1))                                         00212000        I = I + 1                                                       00213000      ELSE                                                              00214000                                                                        00215000        CALL DBINFO(BASE,DATASETNUMBER,301,STATS,BUFFER)                00216000        IF (STATS(1).NE.0) THEN                                         00217000          PRINT *,"COULD NOT GET KEYFIELD PATH INFORMATION..."          00218000          GOTO 800                                                      00219000        ENDIF                                                           00220000                                                                        00221000C     IF ( DATASETTYPE .EQ. "A" .OR. DATASETTYPE .EQ. "M" ) THEN        00222000C       BO_(I) = 1                                                      00223000C       I = I + 1                                                       00224000C       BO_(I) = ABS(BUFFER(3))                                         00225000C       I = I + 1                                                       00226000C     ELSE                                                              00227000        BO_(I) = BUFFER(1)                                              00228000        I = I + 1                                                       00229000        DO K=1,BUFFER(1)                                                00230000          BO_(I) = ABS(BUFFER(K*3))                                     00231000          I = I + 1                                                     00232000        ENDDO                                                           00233000      ENDIF                                                             00234000                                                                        00235000      I = I - 2  !-NOW I IS THE LENGTH IN WORDS.                        00236000                                                                        00237000800   CONTINUE                                                          00238000                                                                        00239000      BO_(2) = STATS(1)                                                 00240000                                                                        00241000      BO_(1) = I * 2       !-PACKET SIZE.                               00242000      CALL SENDPACKET( (I * 2) + 2 )                                    00243000                                                                        00244000      RETURN                                                            00245000      END                                                               00246000                                                                        00247000                                                                        00248000      SUBROUTINE DBLOCKXX()                                             00249000      IMPLICIT NONE                                                     00250000                                                                        00251000$INCLUDE 'TURBOCOM.ADBC211'                                             00252000                                                                        00253000      INTEGER*2 DB,DS,LOCKMODE                                          00254000                                                                        00255000      DB = BI_(2)                                                       00256000      DS = BI_(3)                                                       00257000      LOCKMODE = BI_(4)                                                 00258000                                                                        00259000C     PRINT *,"LOCKING DATABASE..."                                     00260000                                                                        00261000      CALL DBLOCK(DB,DS,LOCKMODE,STATS)                                 00262000                                                                        00263000      BO_(1) = 2                                                        00264000      BO_(2) = STATS(1)                                                 00265000                                                                        00266000      CALL SENDPACKET( 4 )                                              00267000                                                                        00268000      RETURN                                                            00269000      END                                                               00270000                                                                        00271000                                                                        00272000      SUBROUTINE DBUNLOCKXX()                                           00273000      IMPLICIT NONE                                                     00274000                                                                        00275000$INCLUDE 'TURBOCOM.ADBC211'                                             00276000                                                                        00277000      INTEGER*2 DB,DS,LOCKMODE                                          00278000                                                                        00279000      DB = BI_(2)                                                       00280000                                                                        00281000C     PRINT *,"UNLOCKING DATABASE..."                                   00282000                                                                        00283000      CALL DBUNLOCK(DB,DS,1,STATS)                                      00284000                                                                        00285000      BO_(1) = 2                                                        00286000      BO_(2) = STATS(1)                                                 00287000                                                                        00288000      CALL SENDPACKET( 4 )                                              00289000                                                                        00290000      RETURN                                                            00291000      END                                                               00292000                                                                        00293000                                                                        00294000      SUBROUTINE AUTOLOCK( DB, DS, LOCKMODE )                           00295000      IMPLICIT NONE                                                     00296000                                                                        00297000$INCLUDE 'TURBOCOM.ADBC211'                                             00298000                                                                        00299000      SYSTEM INTRINSIC FLOCK, FCHECK                                    00300000                                                                        00301000      INTEGER*2 DB, DS, LOCKMODE                                        00302000                                                                        00303000      IF ( LOCKMODE .GT. 0 ) THEN                                       00304000C       PRINT *,"AUTOLOCKING..."                                        00305000        IF ( DB .EQ. -9999 ) THEN   !- -9999 INDICATED AN MPE FILE.     00306000          CALL FLOCK( DS, LOCKMODE )                                    00307000          CALL FCHECK( DS, STATS(1) )                                   00308000        ELSE                                                            00309000          CALL DBLOCK(DB,DS,LOCKMODE,STATS)                             00310000        ENDIF                                                           00311000        BO_(2) = STATS(1)                                               00312000      ENDIF                                                             00313000                                                                        00314000      RETURN                                                            00315000      END                                                               00316000                                                                        00317000                                                                        00318000      SUBROUTINE AUTOUNLOCK( DB, DS, LOCKMODE )                         00319000      IMPLICIT NONE                                                     00320000                                                                        00321000$INCLUDE 'TURBOCOM.ADBC211'                                             00322000                                                                        00323000      SYSTEM INTRINSIC FUNLOCK, FCHECK                                  00324000                                                                        00325000      INTEGER*2 DB, DS, LOCKMODE                                        00326000                                                                        00327000      IF ( LOCKMODE .GT. 0 ) THEN                                       00328000C       PRINT *,"AUTOUNLOCKING..."                                      00329000        IF ( DB .EQ. -9999 ) THEN   !- -9999 INDICATED MPE FILE.        00330000          CALL FUNLOCK( DS )                                            00331000          CALL FCHECK( DS, GOOD )                                       00332000          IF ( BO_(2) .EQ. 0 ) BO_(2) = GOOD                            00333000        ELSE                                                            00334000          CALL DBUNLOCK(DB,DS,1,STATS)                                  00335000          IF ( BO_(2) .EQ. 0 ) THEN                                     00336000            BO_(2) = STATS(1)                                           00337000          ENDIF                                                         00338000        ENDIF                                                           00339000      ENDIF                                                             00340000                                                                        00341000      RETURN                                                            00342000      END                                                               00343000                                                                        00344000                                                                        00345000      SUBROUTINE TBDELETE()                                             00346000      IMPLICIT NONE                                                     00347000                                                                        00348000$INCLUDE 'TURBOCOM.ADBC211'                                             00349000                                                                        00350000      SYSTEM INTRINSIC FREMOVE, FREAD, FPOINT, FCHECK, FSPACE           00351000      SYSTEM INTRINSIC FFILEINFO, FREADDIR, FWRITEDIR, FCONTROL         00352000                                                                        00353000      INTEGER*2 DB,DS,LOCKAUTO,DSLENGTH,L                               00354000      INTEGER*2 RECNO_ARR(2), TABLE_TYPE, NUMUNIQUE                     00355000      INTEGER*2 BUF_PTR, BUF_OFFSET, V_OFFSET, DS_OFFSET, LN, J         00356000      INTEGER*2 I2(2)                                                   00357000      INTEGER*4 I4                                                      00358000      INTEGER*4 RECNO_BUF, I, EOF_REC, PREV_REC, NEXT_REC               00359000      LOGICAL   ISFILE, IS_KSAM, LDUM, ORIGERROR                        00360000                                                                        00361000      EQUIVALENCE ( RECNO_ARR, RECNO_BUF )                              00362000                                                                        00363000C     PRINT *,"DELETING RECORD..."                                      00364000                                                                        00365000      STATS(1) = 0                                                      00366000                                                                        00367000      DB = BI_(2)                                                       00368000      DS = BI_(3)                                                       00369000      LOCKAUTO = BI_(4)                                                 00370000      DSLENGTH = BI_(5)                                                 00371000      TABLE_TYPE = BI_(6)                                               00372000      RECNO_ARR(1) = BI_(7)                                             00373000      RECNO_ARR(2) = BI_(8)                                             00374000      NUMUNIQUE = BI_(9)                                                00375000      PREV_REC = 0                                                      00376000      NEXT_REC = 0                                                      00377000                                                                        00378000C     PRINT *,"DELETING RECORD NUMBER: ",RECNO_BUF                      00379000                                                                        00380000      ISFILE = ( DB .EQ. -9999 )                                        00381000      IS_KSAM = ( TABLE_TYPE .EQ. 6144 .OR. TABLE_TYPE .EQ. 2048 )      00382000                                                                        00383000      CALL AUTOLOCK( DB, DS, LOCKAUTO )                                 00384000                                                                        00385000      IF ( STATS(1) .EQ. 0 ) THEN                                       00386000                                                                        00387000        LISTC = "@;"                                                    00388000                                                                        00389000        !- Reposition to the appropriate record.                        00390000                                                                        00391000        IF ( RECNO_BUF .GT. -1J ) THEN                                  00392000          IF ( ISFILE ) THEN                                            00393000            CALL FPOINT( DS, RECNO_BUF )                                00394000            STATS(1) = CCODE()                                          00395000            IF ( STATS(1) .LT. 0 ) CALL FCHECK( DS, STATS(1) )          00396000            IF ( NUMUNIQUE .GT. 0 .AND. STATS(1) .EQ. 0 ) THEN          00397000              L = FREAD( DS, DS_, DSLENGTH * -1 )                       00398000              CALL FCHECK( DS, STATS(1) )                               00399000              CALL FPOINT( DS, RECNO_BUF )                              00400000              IF ( STATS(1) .EQ. 0 ) CALL FCHECK( DS, STATS(1) )        00401000            ENDIF                                                       00402000          ELSE                                                          00403000            CALL DBGET(DB,DS,DIRECT,STATS,LISTI,DS_,RECNO_ARR)          00404000          ENDIF                                                         00405000        ELSE                                                            00406000          IF ( ISFILE ) THEN                                            00407000            CALL FSPACE( DS, -1 )                                       00408000            STATS(1) = CCODE()                                          00409000            IF ( STATS(1) .LT. 0 ) CALL FCHECK( DS, STATS(1) )          00410000            IF ( NUMUNIQUE .GT. 0 .AND. STATS(1) .EQ. 0 ) THEN          00411000              L = FREAD( DS, DS_, DSLENGTH * -1 )                       00412000              CALL FCHECK( DS, STATS(1) )                               00413000              CALL FSPACE( DS, -1 )                                     00414000              IF ( STATS(1) .EQ. 0 ) CALL FCHECK( DS, STATS(1) )        00415000            ENDIF                                                       00416000          ELSE                                                          00417000            CALL DBGET(DB,DS,REREAD,STATS,LISTI,DS_,RECNO_ARR)          00418000          ENDIF                                                         00419000        ENDIF                                                           00420000                                                                        00421000        IF ( NUMUNIQUE .GT. 0 ) THEN                                    00422000C         PRINT *,"NUMUNIQUE=",NUMUNIQUE                                00423000          BUF_PTR = 10                                                  00424000C         V_OFFSET = ( NUMUNIQUE * 4 ) + 18                             00425000          V_OFFSET = ( NUMUNIQUE * 4 ) + 18 + 1                         00426000C         PRINT *,"V_OFFSET=",V_OFFSET                                  00427000          ORIGERROR = .FALSE.                                           00428000          J = 0                                                         00429000          DO WHILE ( J .LT. NUMUNIQUE .AND. .NOT. ORIGERROR )           00430000            J = J + 1                                                   00431000            DS_OFFSET = BI_( BUF_PTR )                                  00432000            LN = BI_( BUF_PTR + 1 )                                     00433000C           PRINT *,"DS_OFFSET=",DS_OFFSET," LN=",LN                    00434000C           PRINT *,"ORIG=",BIC_(V_OFFSET:V_OFFSET+LN-1)                00435000C           PRINT *,"DS=",DSC_(DS_OFFSET:DS_OFFSET+LN-1)                00436000            IF ( BIC_(V_OFFSET:V_OFFSET+LN-1) .NE.                      00437000     *          DSC_(DS_OFFSET:DS_OFFSET+LN-1) ) ORIGERROR=.TRUE.       00438000            V_OFFSET = V_OFFSET + LN                                    00439000          ENDDO                                                         00440000          IF ( ORIGERROR ) STATS(1) = -32760                            00441000        ENDIF                                                           00442000                                                                        00443000        IF ( STATS(1) .EQ. 0 ) THEN                                     00444000          IF ( ISFILE ) THEN                                            00445000            IF ( IS_KSAM ) THEN                                         00446000              CALL FREMOVE( DS )                                        00447000              CALL FCHECK( DS, STATS(1) )                               00448000            ELSE                                                        00449000              CALL FFILEINFO( DS, 10, EOF_REC )                         00450000              DO I=RECNO_BUF,EOF_REC - 2                                00451000                CALL FREADDIR( DS, DS_, DSLENGTH * -1, I + 1 )          00452000                CALL FWRITEDIR( DS, DS_, DSLENGTH * -1, I )             00453000              ENDDO                                                     00454000              CALL FPOINT( DS, EOF_REC - 1 )                            00455000              CALL FCONTROL( DS, 6, LDUM )  !- WRITE NEW EOF.           00456000              CALL FPOINT( DS, RECNO_BUF ) !2.0.1 POINT BACK TO ORIG REC00457000            ENDIF                                                       00458000          ELSE                                                          00459000            !- LOAD THE PREVIOUS RECORD                                 00460000            BO_(3) = STATS(7)                                           00461000            BO_(4) = STATS(8)                                           00462000            !- LOAD THE NEXT RECORD                                     00463000            BO_(5) = STATS(9)                                           00464000            BO_(6) = STATS(10)                                          00465000            CALL DBDELETE( DB, DS, 1, STATS )                           00466000          ENDIF                                                         00467000        ENDIF                                                           00468000                                                                        00469000      ENDIF                                                             00470000                                                                        00471000      BO_(2) = STATS(1)                                                 00472000                                                                        00473000      CALL AUTOUNLOCK( DB, DS, LOCKAUTO )                               00474000                                                                        00475000C-    BO_(1) = 2                                                        00476000      BO_(1) = 10                                                       00477000                                                                        00478000C     PRINT *,"TBDELETE STATS(1)=",BO_(2)                               00479000C---  CALL SENDPACKET( 4 )                                              00480000      CALL SENDPACKET( 12 )                                             00481000                                                                        00482000      RETURN                                                            00483000      END                                                               00484000                                                                        00485000                                                                        00486000      SUBROUTINE TBREFRESH()                                            00487000      IMPLICIT NONE                                                     00488000                                                                        00489000$INCLUDE 'TURBOCOM.ADBC211'                                             00490000                                                                        00491000      SYSTEM INTRINSIC FREMOVE, FREAD, FPOINT, FCHECK, FSPACE           00492000      SYSTEM INTRINSIC FFILEINFO, FREADDIR, FWRITEDIR, FCONTROL         00493000                                                                        00494000      INTEGER*2 DB,DS,LOCKAUTO,DSLENGTH,L                               00495000      INTEGER*2 RECNO_ARR(2), TABLE_TYPE, NUMUNIQUE, NUMCOLUMNS         00496000      INTEGER*2 BUF_PTR, BUF_OFFSET, V_OFFSET, DS_OFFSET, LN, J         00497000      INTEGER*2 OUT_PTR                                                 00498000      INTEGER*4 RECNO_BUF, I, EOF_REC                                   00499000      LOGICAL   ISFILE, IS_KSAM, LDUM, ORIGERROR                        00500000                                                                        00501000      EQUIVALENCE ( RECNO_ARR, RECNO_BUF )                              00502000                                                                        00503000C     PRINT *,"REFRESHING A ROW..."                                     00504000                                                                        00505000      STATS(1) = 0                                                      00506000                                                                        00507000      DB = BI_(2)                                                       00508000      DS = BI_(3)                                                       00509000      LOCKAUTO = BI_(4)                                                 00510000      DSLENGTH = BI_(5)                                                 00511000      TABLE_TYPE = BI_(6)                                               00512000      RECNO_ARR(1) = BI_(7)                                             00513000      RECNO_ARR(2) = BI_(8)                                             00514000      NUMUNIQUE = BI_(9)                                                00515000      NUMCOLUMNS = BI_(10)                                              00516000                                                                        00517000C     PRINT *,"DELETING RECORD NUMBER: ",RECNO_BUF                      00518000                                                                        00519000      ISFILE = ( DB .EQ. -9999 )                                        00520000      IS_KSAM = ( TABLE_TYPE .EQ. 6144 .OR. TABLE_TYPE .EQ. 2048 )      00521000                                                                        00522000C     CALL AUTOLOCK( DB, DS, LOCKAUTO )                                 00523000                                                                        00524000C     IF ( STATS(1) .EQ. 0 ) THEN                                       00525000                                                                        00526000        OUT_PTR = 5                                                     00527000                                                                        00528000        LISTC = "@;"                                                    00529000                                                                        00530000        !- Reposition to the appropriate record.                        00531000                                                                        00532000        IF ( RECNO_BUF .GT. -1J ) THEN                                  00533000          IF ( ISFILE ) THEN                                            00534000            CALL FPOINT( DS, RECNO_BUF )                                00535000            STATS(1) = CCODE()                                          00536000            IF ( STATS(1) .LT. 0 ) CALL FCHECK( DS, STATS(1) )          00537000            IF ( NUMUNIQUE .GT. 0 .AND. STATS(1) .EQ. 0 ) THEN          00538000              L = FREAD( DS, DS_, DSLENGTH * -1 )                       00539000              CALL FCHECK( DS, STATS(1) )                               00540000C             CALL FPOINT( DS, RECNO_BUF )                              00541000C             IF ( STATS(1) .EQ. 0 ) CALL FCHECK( DS, STATS(1) )        00542000            ENDIF                                                       00543000          ELSE                                                          00544000            CALL DBGET(DB,DS,DIRECT,STATS,LISTI,DS_,RECNO_ARR)          00545000          ENDIF                                                         00546000        ELSE                                                            00547000          IF ( ISFILE ) THEN                                            00548000            CALL FSPACE( DS, -1 )                                       00549000            STATS(1) = CCODE()                                          00550000            IF ( STATS(1) .LT. 0 ) CALL FCHECK( DS, STATS(1) )          00551000            IF ( NUMUNIQUE .GT. 0 .AND. STATS(1) .EQ. 0 ) THEN          00552000              L = FREAD( DS, DS_, DSLENGTH * -1 )                       00553000              CALL FCHECK( DS, STATS(1) )                               00554000C             CALL FSPACE( DS, -1 )                                     00555000C             IF ( STATS(1) .EQ. 0 ) CALL FCHECK( DS, STATS(1) )        00556000            ENDIF                                                       00557000          ELSE                                                          00558000            CALL DBGET(DB,DS,REREAD,STATS,LISTI,DS_,RECNO_ARR)          00559000          ENDIF                                                         00560000        ENDIF                                                           00561000                                                                        00562000        BUF_PTR = 11                                                    00563000                                                                        00564000        IF ( NUMUNIQUE .GT. 0 ) THEN                                    00565000          V_OFFSET = ( NUMUNIQUE * 4 ) + 20 + ( NUMCOLUMNS * 4 )        00566000          ORIGERROR = .FALSE.                                           00567000          J = 0                                                         00568000          DO WHILE ( J .LT. NUMUNIQUE .AND. .NOT. ORIGERROR )           00569000            J = J + 1                                                   00570000            DS_OFFSET = BI_( BUF_PTR )                                  00571000            LN = BI_( BUF_PTR + 1 )                                     00572000            IF ( BIC_(V_OFFSET:V_OFFSET+LN-1) .NE.                      00573000     *          DSC_(DS_OFFSET:DS_OFFSET+LN-1) ) ORIGERROR=.TRUE.       00574000            BUF_PTR = BUF_PTR + 2                                       00575000            V_OFFSET = V_OFFSET + LN                                    00576000          ENDDO                                                         00577000          IF ( ORIGERROR ) STATS(1) = -32760                            00578000        ENDIF                                                           00579000                                                                        00580000        IF ( STATS(1) .EQ. 0 ) THEN                                     00581000          !- BUF_PTR SHOULD BE AT THE FIRST COLUMN OFFSET ITEM.         00582000          DO J=1,NUMCOLUMNS                                             00583000            DS_OFFSET = BI_(BUF_PTR)                                    00584000            LN = BI_(BUF_PTR + 1)                                       00585000            BOC_(OUT_PTR:OUT_PTR+LN-1) =                                00586000     *        DSC_(DS_OFFSET:DS_OFFSET+LN-1)                            00587000            OUT_PTR = OUT_PTR + LN                                      00588000            BUF_PTR = BUF_PTR + 2                                       00589000          ENDDO                                                         00590000        ENDIF                                                           00591000                                                                        00592000        OUT_PTR = OUT_PTR - 1                                           00593000                                                                        00594000        BO_(1) = OUT_PTR - 2                                            00595000        BO_(2) = STATS(1)                                               00596000                                                                        00597000        CALL SENDPACKET( OUT_PTR )                                      00598000                                                                        00599000      RETURN                                                            00600000      END                                                               00601000                                                                        00602000                                                                        00603000      SUBROUTINE TBUPDATE()                                             00604000      IMPLICIT NONE                                                     00605000                                                                        00606000$INCLUDE 'TURBOCOM.ADBC211'                                             00607000                                                                        00608000      SYSTEM INTRINSIC FUPDATE, FREAD, FFILEINFO, FCHECK, FSPACE        00609000      SYSTEM INTRINSIC FLOCK, FUNLOCK, FPOINT                           00610000                                                                        00611000      INTEGER*2 DB,DS,LOCKAUTO,DSLENGTH,NUMCOLUMNS,DODBUPDATE           00612000      INTEGER*2 I,BUF_PTR,DS_OFFSET,LN,BUF_OFFSET,VERIFYORIGINAL        00613000      INTEGER*2 V_OFFSET                                                00614000      INTEGER*2 RECNO_ARR(2), L                                         00615000      INTEGER*4 RECNO_BUF                                               00616000      LOGICAL   ISFILE                                                  00617000      LOGICAL*2 ORIGERROR                                               00618000                                                                        00619000      EQUIVALENCE ( RECNO_ARR, RECNO_BUF )                              00620000                                                                        00621000C     PRINT *,"UPDATING A ROW..."                                       00622000                                                                        00623000      STATS(1) = 0                                                      00624000                                                                        00625000      DB = BI_(2)                                                       00626000      DS = BI_(3)                                                       00627000      LOCKAUTO = BI_(4)                                                 00628000      DSLENGTH = BI_(5)                                                 00629000      DODBUPDATE = BI_(6)                                               00630000      RECNO_ARR(1) = BI_(7)                                             00631000      RECNO_ARR(2) = BI_(8)                                             00632000      NUMCOLUMNS = BI_(9)                                               00633000                                                                        00634000      ISFILE = ( DB .EQ. -9999 )                                        00635000                                                                        00636000      !- SET RETURNING NUMBER OF BYTES, WILL ALWAYS BE 6.               00637000      !- 2 FOR ERRORCODE, 4 FOR RECORD ID.                              00638000                                                                        00639000      BO_(1) = 6                                                        00640000      !- ZERO OUT THE DATASET BUFFER.                                   00641000                                                                        00642000      DO I=1,(DSLENGTH / 2) + 2                                         00643000        DS_(I) = 0                                                      00644000      ENDDO                                                             00645000                                                                        00646000      CALL AUTOLOCK( DB, DS, LOCKAUTO )                                 00647000                                                                        00648000      IF ( STATS(1) .EQ. 0 ) THEN                                       00649000                                                                        00650000        LISTC = "@;"                                                    00651000                                                                        00652000        !- Reposition to the appropriate record.                        00653000                                                                        00654000        IF ( RECNO_BUF .GT. -1J ) THEN                                  00655000          IF ( ISFILE ) THEN                                            00656000            CALL FPOINT( DS, RECNO_BUF )                                00657000            STATS(1) = CCODE()                                          00658000            IF ( STATS(1) .LT. 0 ) CALL FCHECK( DS, STATS(1) )          00659000            L = FREAD( DS, DS_, DSLENGTH * -1 )                         00660000            CALL FCHECK( DS, STATS(1) )                                 00661000          ELSE                                                          00662000            CALL DBGET(DB,DS,DIRECT,STATS,LISTI,DS_,RECNO_ARR)          00663000          ENDIF                                                         00664000        ELSE                                                            00665000          IF ( ISFILE ) THEN                                            00666000            CALL FSPACE( DS, -1 )                                       00667000            STATS(1) = CCODE()                                          00668000            IF ( STATS(1) .LT. 0 ) CALL FCHECK( DS, STATS(1) )          00669000            L = FREAD( DS, DS_, DSLENGTH * -1 )                         00670000            CALL FCHECK( DS, STATS(1) )                                 00671000          ELSE                                                          00672000            CALL DBGET(DB,DS,REREAD,STATS,LISTI,DS_,RECNO_ARR)          00673000          ENDIF                                                         00674000        ENDIF                                                           00675000                                                                        00676000        BUF_PTR = 10   !- START OF OFFSET/LENGTH FOR EACH COLUMN.       00677000        BUF_OFFSET = ((NUMCOLUMNS-1)*6) + 25   !- START OF THE DATA.    00678000                                                                        00679000        ORIGERROR = .FALSE.                                             00680000        I = 0                                                           00681000                                                                        00682000        DO WHILE ( I .LT. NUMCOLUMNS .AND. .NOT. ORIGERROR )            00683000                                                                        00684000          I = I + 1                                                     00685000                                                                        00686000          DS_OFFSET = BI_( BUF_PTR )                                    00687000          LN = BI_( BUF_PTR + 1 )                                       00688000          VERIFYORIGINAL = BI_( BUF_PTR + 2 )                           00689000                                                                        00690000C         IF ( VERIFYORIGINAL .EQ. 1 ) THEN                             00691000          IF ( VERIFYORIGINAL .GT. 0 ) THEN                             00692000C           PRINT *,"VERIFYING AGAINS ORIGINAL..."                      00693000C           PRINT *,"VERIFYORIGINAL=",VERIFYORIGINAL                    00694000C           V_OFFSET = BUF_OFFSET + LN                                  00695000            V_OFFSET = BUF_OFFSET                                       00696000            IF ( VERIFYORIGINAL .NE. 2 ) V_OFFSET = V_OFFSET + LN       00697000                                                                        00698000C           PRINT *,"V VALUE=",BIC_(V_OFFSET:V_OFFSET+LN-1)             00699000C           PRINT *,"V VALUE=",DSC_(DS_OFFSET:DS_OFFSET+LN-1)           00700000            IF ( DSC_(DS_OFFSET:DS_OFFSET + LN - 1) .NE.                00701000     *           BIC_(V_OFFSET:V_OFFSET + LN - 1 ) ) THEN               00702000C             PRINT *,"ORIGINAL VALUE HAS CHANGED..."                   00703000              ORIGERROR = .TRUE.                                        00704000C             BO_(2) = -32761                                           00705000C             IF ( VERIFYORIGINAL .GT. 1 ) BO_(2) = -32760              00706000              STATS(1) = -32761                                         00707000              IF ( VERIFYORIGINAL .GT. 1 ) STATS(1) = -32760            00708000            ENDIF                                                       00709000          ENDIF                                                         00710000                                                                        00711000          IF ( .NOT. ORIGERROR ) THEN                                   00712000C           PRINT *,"DS_OFFSET=",DS_OFFSET," LN=",LN                    00713000            DSC_(DS_OFFSET:DS_OFFSET + LN - 1) =                        00714000     *      BIC_(BUF_OFFSET:BUF_OFFSET + LN - 1)                        00715000C           PRINT *,"DATA=",BIC_(BUF_OFFSET:BUF_OFFSET + LN - 1)        00716000            BUF_OFFSET = BUF_OFFSET + LN                                00717000            IF ( VERIFYORIGINAL .EQ. 1 .OR. VERIFYORIGINAL .EQ. 3 )     00718000     *           BUF_OFFSET = BUF_OFFSET + LN                           00719000            BUF_PTR = BUF_PTR + 3                                       00720000          ENDIF                                                         00721000                                                                        00722000        ENDDO                                                           00723000                                                                        00724000C       PRINT *,"DSC_=",DSC_(1:DSLENGTH)                                00725000                                                                        00726000        IF ( .NOT. ORIGERROR ) THEN                                     00727000          IF ( ISFILE ) THEN                                            00728000            CALL FUPDATE( DS, DS_, DSLENGTH * -1 )                      00729000            CALL FCHECK( DS, STATS(1) )                                 00730000            IF ( STATS(1) .EQ. 0 ) CALL FFILEINFO( DS, 9, RECNO_BUF )   00731000            STATS(3) = RECNO_ARR(1)                                     00732000            STATS(4) = RECNO_ARR(2)                                     00733000          ELSE                                                          00734000            IF ( DODBUPDATE .EQ. 1 ) THEN                               00735000                                                                        00736000C             PRINT *,"PERFORMING A DBUPDATE..."                        00737000                                                                        00738000              CALL DBUPDATE(DB,DS,1,STATS,LISTI,DS_)                    00739000C---          BO_(2) = STATS(1)                                         00740000C---          BO_(3) = STATS(3)                                         00741000C---          BO_(4) = STATS(4)                                         00742000                                                                        00743000            ELSE                                                        00744000                                                                        00745000C             PRINT *,"PERFORMING A DBDELETE/DBPUT..."                  00746000                                                                        00747000              CALL DBDELETE(DB,DS,1,STATS)                              00748000              IF ( STATS(1) .EQ. 0 ) THEN                               00749000                CALL DBPUT(DB,DS,1,STATS,LISTI,DS_)                     00750000                IF ( STATS(1) .NE. 0 ) CALL DBEXPLAIN( STATS )          00751000              ENDIF                                                     00752000            ENDIF                                                       00753000          ENDIF                                                         00754000        ENDIF                                                           00755000                                                                        00756000        BO_(2) = STATS(1)                                               00757000        BO_(3) = STATS(3) !- STATS(3-4) IS RECORD NUMBER.               00758000        BO_(4) = STATS(4)                                               00759000                                                                        00760000      ENDIF                                                             00761000                                                                        00762000      CALL AUTOUNLOCK( DB, DS, LOCKAUTO )                               00763000                                                                        00764000C     PRINT *,"SENDING DBUPDATE RETURN INFO..."                         00765000      CALL SENDPACKET( 8 )                                              00766000                                                                        00767000      RETURN                                                            00768000      END                                                               00769000                                                                        00770000                                                                        00771000      SUBROUTINE TBPUT()                                                00772000      IMPLICIT NONE                                                     00773000                                                                        00774000$INCLUDE 'TURBOCOM.ADBC211'                                             00775000                                                                        00776000      SYSTEM INTRINSIC FWRITE, FFILEINFO, FCHECK, FPOINT, FSPACE        00777000      SYSTEM INTRINSIC FLOCK, FUNLOCK                                   00778000                                                                        00779000      INTEGER*2 DB,DS,LOCKAUTO,DSLENGTH,NUMCOLUMNS,TABLE_TYPE           00780000      INTEGER*2 I,BUF_PTR,DS_OFFSET,LN,BUF_OFFSET, FILESIZE_ARR(2)      00781000      INTEGER*2 OPTIONA, OPTIONB                                        00782000      INTEGER*4 FILESIZE                                                00783000      LOGICAL ISFILE, IS_KSAM, DONE, DS_ERROR, FS_ERROR                 00784000                                                                        00785000      EQUIVALENCE ( FILESIZE, FILESIZE_ARR )                            00786000                                                                        00787000C     PRINT *,"INSERTING A ROW..."                                      00788000                                                                        00789000      STATS(1) = 0                                                      00790000                                                                        00791000      DB = BI_(2)                                                       00792000      DS = BI_(3)                                                       00793000      LOCKAUTO = BI_(4)                                                 00794000      DSLENGTH = BI_(5)                                                 00795000      TABLE_TYPE = BI_(6)                                               00796000      OPTIONA = BI_(7)                                                  00797000      OPTIONB = BI_(8)                                                  00798000C---  NUMCOLUMNS = BI_(6)                                               00799000C---  NUMCOLUMNS = BI_(7)                                               00800000      NUMCOLUMNS = BI_(9)                                               00801000                                                                        00802000      IS_KSAM = ( TABLE_TYPE .EQ. 6144 .OR. TABLE_TYPE .EQ. 2048 )      00803000                                                                        00804000      ISFILE = ( DB .EQ. -9999 )                                        00805000                                                                        00806000      !- SET RETURNING NUMBER OF BYTES, WILL ALWAYS BE 6.               00807000      !- 2 FOR ERRORCODE, 4 FOR RECORD ID.                              00808000                                                                        00809000      BO_(1) = 6                                                        00810000      !- ZERO OUT THE DATASET BUFFER.                                   00811000                                                                        00812000      DO I=1,(DSLENGTH / 2) + 2                                         00813000        DS_(I) = 0                                                      00814000      ENDDO                                                             00815000                                                                        00816000      CALL AUTOLOCK( DB, DS, LOCKAUTO )                                 00817000                                                                        00818000      IF ( STATS(1) .EQ. 0 ) THEN                                       00819000C---  IF ( .NOT. DONE ) THEN                                            00820000                                                                        00821000C---    BUF_PTR = 7    !- START OF OFFSET/LENGTH FOR EACH COLUMN.       00822000C---    BUF_PTR = 8    !- START OF OFFSET/LENGTH FOR EACH COLUMN.       00823000        BUF_PTR = 10   !- START OF OFFSET/LENGTH FOR EACH COLUMN.       00824000C---    BUF_OFFSET = ((NUMCOLUMNS-1)*4) + 17   !- START OF THE DATA.    00825000C---    BUF_OFFSET = ((NUMCOLUMNS-1)*4) + 19   !- START OF THE DATA.    00826000        BUF_OFFSET = ((NUMCOLUMNS-1)*4) + 23   !- START OF THE DATA.    00827000                                                                        00828000        DO I=1,NUMCOLUMNS                                               00829000                                                                        00830000          DS_OFFSET = BI_( BUF_PTR )                                    00831000          LN = BI_( BUF_PTR + 1 )                                       00832000C         PRINT *,"DS_OFFSET=",DS_OFFSET," LN=",LN                      00833000          DSC_(DS_OFFSET:DS_OFFSET + LN - 1) =                          00834000     *    BIC_(BUF_OFFSET:BUF_OFFSET + LN - 1)                          00835000          BUF_OFFSET = BUF_OFFSET + LN                                  00836000          BUF_PTR = BUF_PTR + 2                                         00837000                                                                        00838000        ENDDO                                                           00839000                                                                        00840000C       PRINT *,"DSC_=",DSC_(1:DSLENGTH)                                00841000                                                                        00842000        LISTC = "@;"                                                    00843000                                                                        00844000        IF ( ISFILE ) THEN                                              00845000          IF ( .NOT. IS_KSAM ) THEN                                     00846000            CALL FFILEINFO( DS, 10, FILESIZE )                          00847000            CALL FPOINT( DS, FILESIZE )                                 00848000          ENDIF                                                         00849000          CALL FWRITE( DS, DS_, DSLENGTH * -1, OPTIONA )                00850000          GOOD = CCODE()                                                00851000          IF ( GOOD .LT. 0 ) CALL FCHECK( DS, STATS(1) )                00852000        ELSE                                                            00853000          CALL DBPUT(DB,DS,1,STATS,LISTI,DS_)                           00854000          IF ( STATS(1) .NE. 0 ) CALL DBEXPLAIN( STATS )                00855000        ENDIF                                                           00856000                                                                        00857000          BO_(2) = STATS(1)                                             00858000          IF ( .NOT. ISFILE ) THEN                                      00859000            BO_(3) = STATS(3) !- STATS(3-4) IS RECORD NUMBER.           00860000            BO_(4) = STATS(4)                                           00861000          ELSE                                                          00862000            IF ( IS_KSAM ) THEN                                         00863000              !- IF KSAM SPACE BACKWARDS OVER RECORD JUST WRITTEN TO    00864000              !- GET THE RECORD ID(FILESIZE - RENAME LATER FOR CLARITY.)00865000              CALL FSPACE( DS, -1 )                                     00866000              CALL FFILEINFO( DS, 9, FILESIZE )                         00867000            ENDIF                                                       00868000            BO_(3) = FILESIZE_ARR(1)                                    00869000            BO_(4) = FILESIZE_ARR(2)                                    00870000          ENDIF                                                         00871000                                                                        00872000      ENDIF                                                             00873000                                                                        00874000      CALL AUTOUNLOCK( DB, DS, LOCKAUTO )                               00875000                                                                        00876000C     PRINT *,"SENDING DBPUT RETURN INFO..."                            00877000      CALL SENDPACKET( 8 )                                              00878000C     PRINT *,"DBPUT RETURN INFO WAS SENT..."                           00879000                                                                        00880000      RETURN                                                            00881000      END                                                               00882000                                                                        00883000                                                                        00884000      SUBROUTINE TBGET( DB, DS, MODE )                                  00885000      IMPLICIT NONE                                                     00886000                                                                        00887000      SYSTEM INTRINSIC FREAD, FPOINT, FCHECK, FCONTROL, FFINDBYKEY      00888000      SYSTEM INTRINSIC FFILEINFO, FSPACE                                00889000                                                                        00890000$INCLUDE 'TURBOCOM.ADBC211'                                             00891000                                                                        00892000      INTEGER*2 DB,DS,MODE                                              00893000      INTEGER*2 K,J,M,N,SIZE_ACC,OFFSET,SIZE, NUM_FIELDS,OUT_SIZE       00894000      INTEGER*2 IDUM,L, TMPSIZE                                         00895000      INTEGER*2 RECNO_ARR(2),START_PTR                                  00896000      INTEGER*4 NUMRECS, RECNO_BUF, FILE_RECNO, RECNOX                  00897000      INTEGER*2 FETCH_ARR(2), OPTIONA, OPTIONB                          00898000      INTEGER*4 FETCH_SIZE                                              00899000      INTEGER*2 RESET_DATASET, TABLE_TYPE, REVERSE_SPACE                00900000      INTEGER*2 DBMODE,SER,BACKSERIAL,DIRECTED,CHAINED,                 00901000     *          BACKCHAINED,CALCULATED                                  00902000      LOGICAL*2 LDUM                                                    00903000      LOGICAL   CONTINUOUS_FETCH, IS_KSAM, VARIABLE_SIZE                00904000      LOGICAL   DONE, ISFILE, FS_ERROR, DS_ERROR                        00905000                                                                        00906000      EQUIVALENCE (RECNO_BUF,RECNO_ARR), (FETCH_SIZE, FETCH_ARR)        00907000                                                                        00908000      DATA SER,BACKSERIAL,DIRECTED,CHAINED,BACKCHAINED,                 00909000     *     CALCULATED /2,3,4,5,6,7/                                     00910000                                                                        00911000      IF ( NETWORK_ERROR .NE. 0 ) RETURN                                00912000                                                                        00913000      DBMODE = BI_(2)                                                   00914000                                                                        00915000      DB = BI_(3)                                                       00916000      ISFILE = ( DB .EQ. -9999 )                                        00917000                                                                        00918000      DS = BI_(4)                                                       00919000                                                                        00920000C---  OPTIONA = BI_(10)                                                 00921000C---  OPTIONB = BI_(11)                                                 00922000      OPTIONA = BI_(11)                                                 00923000      OPTIONB = BI_(12)                                                 00924000                                                                        00925000C---  NUM_FIELDS = BI_(9)                                               00926000C---  NUM_FIELDS = BI_(10)                                              00927000C---  NUM_FIELDS = BI_(12)                                              00928000      NUM_FIELDS = BI_(13)                                              00929000                                                                        00930000C---  PRINT *,"DB=",DB," DS=",DS," NUM=",NUM_FIELDS                     00931000                                                                        00932000C     PRINT *,"KEYVALUE=",KEYVALUE_CH                                   00933000                                                                        00934000      RECNO_ARR(1) = BI_(5)                                             00935000      RECNO_ARR(2) = BI_(6)                                             00936000                                                                        00937000      !- ASSIGN FETCH SIZE.                                             00938000      FETCH_ARR(1) = BI_(7)                                             00939000      FETCH_ARR(2) = BI_(8)                                             00940000                                                                        00941000C---  FETCH_SIZE = BI_(7)                                               00942000                                                                        00943000C---  RESET_DATASET = BI_(8)                                            00944000      RESET_DATASET = BI_(9)                                            00945000C---  TABLE_TYPE = BI_(9)                                               00946000      TABLE_TYPE = BI_(10)                                              00947000C---  PRINT *,"TABLE_TYPE=",TABLE_TYPE                                  00948000                                                                        00949000      IS_KSAM = ( TABLE_TYPE .EQ. 6144 .OR. TABLE_TYPE .EQ. 2048 )      00950000                                                                        00951000C     IF ( IS_KSAM ) THEN                                               00952000C       PRINT *,"KSAM KSAM KSAM KSAM KSAM KSAM KSAM"                    00953000C     ENDIF                                                             00954000                                                                        00955000      CONTINUOUS_FETCH = ( FETCH_SIZE .EQ. 0 )                          00956000                                                                        00957000      NUMRECS = 0                                                       00958000                                                                        00959000      START_PTR = 1                                                     00960000      BUFF_SEND_SIZE = 30000                                            00961000      BUFF_PTR = 1                                                      00962000                                                                        00963000      LISTC = "@;"                                                      00964000                                                                        00965000      IF ( RESET_DATASET .EQ. 1 ) THEN                                  00966000        IF ( ISFILE ) THEN                                              00967000          CALL FCONTROL( DS, 5, LDUM )                                  00968000          FILE_RECNO = -1                                               00969000        ELSE                                                            00970000          CALL DBCLOSE(DB,DS,3,STATS)                                   00971000        ENDIF                                                           00972000      ENDIF                                                             00973000                                                                        00974000      IF ((DBMODE .EQ. CHAINED .OR. DBMODE .EQ. BACKCHAINED .OR.        00975000     *     DBMODE .EQ. CALCULATED .OR. DBMODE .EQ. DIRECTED )) THEN     00976000                                                                        00977000        CALL EXTRACT_KEY_VALUE()                                        00978000                                                                        00979000      ENDIF                                                             00980000                                                                        00981000      DONE = .FALSE.                                                    00982000                                                                        00983000C-    IF ((DBMODE .EQ. CHAINED .OR. DBMODE .EQ. BACKCHAINED) .AND.      00984000C-   *     RESET_DATASET .EQ. 1 )                                THEN   00985000C---2.0.1                                                               00986000C---  IF ( (DBMODE .EQ. CHAINED .OR. DBMODE .EQ. BACKCHAINED) .AND.     00987000C--- *     .NOT. ( RECNO_BUF .EQ. -1 .AND. RESET_DATASET .EQ. 0J) ) THEN00988000                                                                        00989000C---    IF ( ISFILE ) THEN                                              00990000C---      CALL FFINDBYKEY( DS, KEYVALUE, KEYFIELD, KEY_SIZE, 0 )        00991000C---      DONE = FS_ERROR( DS )                                         00992000C---      CALL FFILEINFO( DS, 9, FILE_RECNO )                           00993000C---      FILE_RECNO = FILE_RECNO - 1                                   00994000C---    ELSE                                                            00995000C---      CALL DBFIND(DB,DS,1,STATS,KEYFIELD,KEYVALUE)                  00996000C---      DONE = DS_ERROR()                                             00997000C---    ENDIF                                                           00998000C---  ENDIF                                                             00999000                                                                        01000000C---2.0.1                                                               01001000      IF ( ISFILE .AND. RESET_DATASET .EQ. 1 .AND.                      01002000     *     ( DBMODE .EQ. CHAINED .OR. DBMODE .EQ. BACKCHAINED) ) THEN   01003000          CALL FFINDBYKEY( DS, KEYVALUE, KEYFIELD, KEY_SIZE, OPTIONB )  01004000          DONE = FS_ERROR( DS )                                         01005000          CALL FFILEINFO( DS, 9, FILE_RECNO )                           01006000          FILE_RECNO = FILE_RECNO - 1                                   01007000      ELSEIF ( .NOT. ISFILE .AND.                                       01008000     *     ( RECNO_BUF .NE. -1 .OR. RESET_DATASET .EQ. 1 ) .AND.        01009000     *     ( DBMODE .EQ. CHAINED .OR. DBMODE .EQ. BACKCHAINED) ) THEN   01010000C---      CALL DBFIND(DB,DS,1,STATS,KEYFIELD,KEYVALUE)                  01011000C---2.1.1 CALL DBFIND(DB,DS,OPTIONB,STATS,KEYFIELD,KEYVALUE)            01012000          !2.1.1 USE KEYNAME INSTEAD OF FIELD NUMBER.                   01013000          CALL DBFIND(DB,DS,OPTIONB,STATS,KEYNAMEI,KEYVALUE)            01014000          DONE = DS_ERROR()                                             01015000      ENDIF                                                             01016000                                                                        01017000      REVERSE_SPACE = -2                                                01018000      IF ( RESET_DATASET .EQ. 2 ) REVERSE_SPACE = -1     !2.0.1         01019000                                                                        01020000      !-A ksam file with reset_dataset = 2 will always have             01021000      !-recno_buf = -1.  Client will never sent ksam recno with         01022000      !-reset_dataset = -2.                                             01023000                                                                        01024000      IF ( RECNO_BUF .NE. -1 .AND. .NOT. DONE ) THEN                    01025000        IF ( ISFILE ) THEN                                              01026000          FILE_RECNO = RECNO_BUF                                        01027000          CALL FPOINT( DS, FILE_RECNO )                                 01028000          DONE = FS_ERROR( DS )                                         01029000C---2.0.1 IF ( .NOT. DONE .AND. RESET_DATASET .NE. 2 ) THEN             01030000          IF ( .NOT. DONE ) THEN      !2.0.1                            01031000            IF ( DBMODE.NE.BACKSERIAL .AND. DBMODE.NE.BACKCHAINED ) THEN01032000              IF ( RESET_DATASET .NE. 2 ) THEN   !2.0.1                 01033000                CALL FSPACE( DS, 1 )                                    01034000                DONE = FS_ERROR( DS )                                   01035000              ENDIF                                                     01036000            ELSE                                                        01037000              REVERSE_SPACE = -1                                        01038000            ENDIF                                                       01039000C---2.0.1   DONE = FS_ERROR( DS )                                       01040000          ENDIF                                                         01041000        ELSE                                                            01042000          CALL DBGET(DB,DS,DIRECTED,STATS,LISTI,DS_,RECNO_BUF)          01043000          IF ( .NOT. ( STATS(1) .EQ. 0 .OR. STATS(1) .EQ. 17 ) ) THEN   01044000            DONE = DS_ERROR()                                           01045000          ENDIF                                                         01046000        ENDIF                                                           01047000      ENDIF                                                             01048000                                                                        01049000      !- COMPUTE THE SIZE OF THE RECORD.                                01050000                                                                        01051000C---  J = 13       !- THE START OF EACH COLUMN DEF IN BI_.              01052000      J = 14       !- THE START OF EACH COLUMN DEF IN BI_.              01053000                                                                        01054000      VARIABLE_SIZE = ( BI_( J + 1 ) .EQ. -1 )                          01055000                                                                        01056000      IF ( .NOT. VARIABLE_SIZE ) THEN                                   01057000        OUT_SIZE = 6                                                    01058000        DO N=1,NUM_FIELDS                                               01059000          OUT_SIZE = OUT_SIZE + BI_(J+1)                                01060000          J = J + 2                                                     01061000        ENDDO                                                           01062000      ENDIF                                                             01063000                                                                        01064000C     PRINT *,"STARTING RETRIEVE..."                                    01065000                                                                        01066000C-----REVERSE_SPACE = -1                                                01067000                                                                        01068000      DO WHILE ( .NOT. DONE .AND. NETWORK_ERROR .EQ. 0 )                01069000        IF ( ISFILE ) THEN                                              01070000          IF ( DBMODE .EQ. DIRECTED ) THEN                              01071000            RECNO_ARR(1) = KEYVALUE(1)                                  01072000            RECNO_ARR(2) = KEYVALUE(2)                                  01073000            FILE_RECNO = RECNO_BUF                                      01074000            CALL FPOINT( DS, FILE_RECNO )                               01075000            DONE = FS_ERROR( DS )                                       01076000          ENDIF                                                         01077000          IF ( .NOT. DONE ) THEN                                        01078000            IF ( DBMODE.EQ.BACKSERIAL .OR. DBMODE.EQ.BACKCHAINED ) THEN 01079000C---2.0.1     IF ( RESET_DATASET .NE. 2 ) THEN                          01080000                IF ( .NOT. IS_KSAM .AND. FILE_RECNO .EQ. 0 ) THEN       01081000                  DONE = .TRUE.                                         01082000                  GOOD = 10                                             01083000                ELSE                                                    01084000                  CALL FSPACE( DS, REVERSE_SPACE )                      01085000                  DONE = FS_ERROR( DS )                                 01086000                  REVERSE_SPACE = -2                                    01087000                ENDIF                                                   01088000C---2.0.1     ELSE                                                      01089000C---2.0.1       RESET_DATASET = 0                                       01090000C---2.0.1     ENDIF                                                     01091000            ENDIF                                                       01092000            IF ( .NOT. DONE ) THEN                                      01093000              CALL FFILEINFO( DS, 9, FILE_RECNO )                       01094000              L = FREAD( DS, DS_, OPTIONA * -1 )                        01095000              DONE = FS_ERROR( DS )                                     01096000            ENDIF                                                       01097000          ENDIF                                                         01098000        ELSE                                                            01099000          !- If RESET_DATASET is set to 2, use the record from the above01100000          !- Directed DBGET.  Do not advance to the next or previous rec01101000          IF ( RESET_DATASET .NE. 2 ) THEN                              01102000            CALL DBGET(DB,DS,DBMODE,STATS,LISTI,DS_,KEYVALUE)           01103000            DONE = DS_ERROR()                                           01104000          ELSE                                                          01105000            RESET_DATASET = 0                                           01106000          ENDIF                                                         01107000        ENDIF                                                           01108000        RESET_DATASET = 0    !2.0.1                                     01109000        IF ( .NOT. DONE ) THEN                                          01110000          LISTC="*;"                                                    01111000                                                                        01112000          !- SET THE HEADER VALUES. VARIABLE SIZE IS FOR VARIABLE       01113000          !- LENGTH FILES ONLY.                                         01114000                                                                        01115000          IF ( VARIABLE_SIZE ) OUT_SIZE = L + 6                         01116000                                                                        01117000          REC_HDR(1) = OUT_SIZE                                         01118000          REC_HDRCH(3:4) = "DT"                                         01119000          IF ( ISFILE ) THEN                                            01120000            RECNO_BUF = FILE_RECNO                                      01121000          ELSE                                                          01122000            RECNO_BUF = RECNO                                           01123000          ENDIF                                                         01124000          REC_HDR(3) = RECNO_ARR(1)                                     01125000          REC_HDR(4) = RECNO_ARR(2)                                     01126000          BOC_(START_PTR:START_PTR + 7) = REC_HDRCH(1:8)                01127000                                                                        01128000          K = START_PTR + 8                                             01129000C---------OUT_SIZE = 6                                                  01130000                                                                        01131000C---      J = 10       !- THE START OF EACH COLUMN DEF IN BI_.          01132000C---      J = 11       !- THE START OF EACH COLUMN DEF IN BI_.          01133000C---      J = 13       !- THE START OF EACH COLUMN DEF IN BI_.          01134000          J = 14       !- THE START OF EACH COLUMN DEF IN BI_.          01135000                                                                        01136000          DO N=1,NUM_FIELDS                                             01137000            OFFSET = BI_(J)                                             01138000            SIZE = BI_(J+1)                                             01139000            IF ( VARIABLE_SIZE ) SIZE = L                               01140000            IF ( SIZE .GT. 0 ) THEN                                     01141000              IF ( K + SIZE - 1 .LE. BUFF_SEND_SIZE ) THEN              01142000                BOC_(K:K+SIZE-1)=                                       01143000     *              DSC_(OFFSET:OFFSET+SIZE-1)                          01144000              ELSE                                                      01145000                TMPSIZE = BUFF_SEND_SIZE - K + 1                        01146000                BOC_(K:K+TMPSIZE-1)=                                    01147000     *              DSC_(OFFSET:OFFSET+TMPSIZE-1)                       01148000                CALL SENDPACKET( K + TMPSIZE - 1 )                      01149000                SIZE = SIZE - TMPSIZE                                   01150000                OFFSET = OFFSET + TMPSIZE                               01151000                K = 1                                                   01152000                BOC_(K:K+SIZE-1)=                                       01153000     *              DSC_(OFFSET:OFFSET+SIZE-1)                          01154000              ENDIF                                                     01155000              K = K + SIZE                                              01156000            ENDIF                                                       01157000C-----------OUT_SIZE = OUT_SIZE + SIZE                                  01158000            J = J + 2                                                   01159000          ENDDO                                                         01160000          BUFF_PTR = K                                                  01161000                                                                        01162000C---------IF ( BUFF_PTR + OUT_SIZE + 2 .GT. BUFF_SEND_SIZE ) THEN       01163000          IF ( BUFF_PTR + 7 .GE. BUFF_SEND_SIZE ) THEN                  01164000            CALL SENDPACKET( BUFF_PTR - 1 )                             01165000            BUFF_PTR = 1                                                01166000          END IF                                                        01167000          START_PTR = BUFF_PTR                                          01168000        ENDIF                                                           01169000        IF ( DBMODE .EQ. CALCULATED .OR. DBMODE .EQ. DIRECTED ) THEN    01170000          DONE = .TRUE.                                                 01171000C         GOOD = 99                                                     01172000        ELSEIF ( .NOT. CONTINUOUS_FETCH ) THEN                          01173000          FETCH_SIZE = FETCH_SIZE - 1                                   01174000          IF ( FETCH_SIZE .EQ. 0 ) DONE = .TRUE.                        01175000        ENDIF                                                           01176000      ENDDO                                                             01177000                                                                        01178000      IF ( GOOD .EQ. 0 ) THEN                                           01179000        !- FETCHED NUMBER OF DESIRED RECORDS.                           01180000        CALL SEND_TERMINATION("EB")   !-END BATCH                       01181000C       PRINT *,"END OF BATCH ENCOUNTERED..."                           01182000C     ELSE     !2.0.1                                                   01183000      ELSEIF ( GOOD .NE. -32767 ) THEN   !2.0.1                         01184000        CALL SEND_TERMINATION("EO")   !-EOF                             01185000C       PRINT *,"END OF FILE ENCOUNTERED..."                            01186000      ENDIF                                                             01187000                                                                        01188000C     PRINT *,"RECORDS RETRIEVED: ",JJ                                  01189000                                                                        01190000      RETURN                                                            01191000      END                                                               01192000                                                                        01193000                                                                        01194000      LOGICAL FUNCTION FS_ERROR(FNUM)                                   01195000      IMPLICIT NONE                                                     01196000                                                                        01197000      SYSTEM INTRINSIC FCHECK                                           01198000                                                                        01199000$INCLUDE 'TURBOCOM.ADBC211'                                             01200000                                                                        01201000      INTEGER*2 FNUM                                                    01202000                                                                        01203000      GOOD = CCODE()                                                    01204000      FS_ERROR = .FALSE.                                                01205000      IF ( GOOD .NE. 0 ) FS_ERROR = .TRUE.                              01206000      IF ( GOOD .LT. 0 ) THEN                                           01207000        CALL FCHECK( FNUM, GOOD )                                       01208000        IF ( GOOD .NE. 12 .AND. GOOD .NE. 172 ) THEN  !2.0.1            01209000          CALL SEND_ERROR()                                             01210000          GOOD = -32767    !2.0.1                                       01211000        ELSE                                                            01212000          GOOD = 10                                                     01213000        ENDIF                                                           01214000      ENDIF                                                             01215000                                                                        01216000      RETURN                                                            01217000      END                                                               01218000                                                                        01219000                                                                        01220000      LOGICAL FUNCTION DS_ERROR()                                       01221000      IMPLICIT NONE                                                     01222000                                                                        01223000$INCLUDE 'TURBOCOM.ADBC211'                                             01224000                                                                        01225000      DS_ERROR = .FALSE.                                                01226000      IF ( GOOD .NE. 0 ) THEN                                           01227000C-      PRINT *,"DS_ERROR=",GOOD                                        01228000        IF ( GOOD .LT. 0 ) THEN                                         01229000          CALL DBEXPLAIN(STATS)                                         01230000          CALL SEND_ERROR()                                             01231000          GOOD = -32767    !2.0.1                                       01232000        ENDIF                                                           01233000        DS_ERROR = .TRUE.                                               01234000      ENDIF                                                             01235000                                                                        01236000      RETURN                                                            01237000      END                                                               01238000                                                                        01239000                                                                        01240000                                                                        01241000      SUBROUTINE EXTRACT_KEY_VALUE()                                    01242000      IMPLICIT NONE                                                     01243000                                                                        01244000$INCLUDE 'TURBOCOM.ADBC211'                                             01245000                                                                        01246000      INTEGER*2 NUM_FIELDS, OFFSET, I                                   01247000                                                                        01248000C---  NUM_FIELDS = BI_(9)                                               01249000C---  NUM_FIELDS = BI_(12)                                              01250000      NUM_FIELDS = BI_(13)                                              01251000C---  KEYFIELD = BI_( 5 + ( NUM_FIELDS * 2 ) )                          01252000C---  KEY_SIZE  = BI_( 6 + ( NUM_FIELDS * 2 ) )                         01253000C---  KEYFIELD = BI_( 10 + ( NUM_FIELDS * 2 ) )                         01254000C---  KEY_SIZE  = BI_( 11 + ( NUM_FIELDS * 2 ) )                        01255000C---  KEYFIELD = BI_( 11 + ( NUM_FIELDS * 2 ) )                         01256000C---  KEY_SIZE  = BI_( 12 + ( NUM_FIELDS * 2 ) )                        01257000C---  KEYFIELD = BI_( 13 + ( NUM_FIELDS * 2 ) )                         01258000C---  KEY_SIZE  = BI_( 14 + ( NUM_FIELDS * 2 ) )                        01259000      KEYFIELD = BI_( 14 + ( NUM_FIELDS * 2 ) )                         01260000      KEY_SIZE  = BI_( 15 + ( NUM_FIELDS * 2 ) )                        01261000                                                                        01262000      !2.1.1 LOAD THE KEY COLUMN NAME.                                  01263000                                                                        01264000      OFFSET = 15 + ( NUM_FIELDS * 2 )                                  01265000      DO I=1,8                                                          01266000        KEYNAMEI(I) = BI_(OFFSET + I)                                   01267000      ENDDO                                                             01268000                                                                        01269000      KEYVALUE_CH = "    "                                              01270000C---  OFFSET = ( 13 + (NUM_FIELDS * 4) )                                01271000C---  OFFSET = ( 23 + (NUM_FIELDS * 4) )                                01272000C---  OFFSET = ( 25 + (NUM_FIELDS * 4) )                                01273000C---  OFFSET = ( 29 + (NUM_FIELDS * 4) )                                01274000      OFFSET = ( 31 + (NUM_FIELDS * 4) )                                01275000                                                                        01276000      !2.1.1 - MUST ADJUST FOR THE SIZE OF KEY_NAME 16 BYTES.           01277000                                                                        01278000      OFFSET = OFFSET + 16                                              01279000                                                                        01280000      KEYVALUE_CH(1:KEY_SIZE) = BIC_(OFFSET:OFFSET+KEY_SIZE-1)          01281000                                                                        01282000      RETURN                                                            01283000      END                                                               01284000                                                                        01285000                                                                        01286000                                                                        01287000      SUBROUTINE FOPENXX()                                              01288000      IMPLICIT NONE                                                     01289000                                                                        01290000$INCLUDE 'TURBOCOM.ADBC211'                                             01291000                                                                        01292000      SYSTEM INTRINSIC FOPEN, FCHECK, FFILEINFO                         01293000                                                                        01294000      LOGICAL*2 FOPT, AOPT                                              01295000      INTEGER*2 FOPI, AOPI                                              01296000                                                                        01297000      INTEGER*2 FNUM, ERRNO                                             01298000      INTEGER*2 RECSIZE, RECSIZEB, BLOCKFACTOR, NUMBUFFERS, NUMEXTENTS  01299000      INTEGER*2 INITEXTENTS, FILECODE                                   01300000      INTEGER*2 L_KSAM, L_FNAME, L_DEVICE, KSAM_PTR, NUM_KEYS           01301000      INTEGER*2 I                                                       01302000      INTEGER*2 FILESIZE_ARR(2), KSAM_ARR(80)                           01303000      INTEGER*4 FILESIZE                                                01304000                                                                        01305000      CHARACTER FNAME*40                                                01306000      CHARACTER DEVICEC*40                                              01307000                                                                        01308000      EQUIVALENCE ( FOPT, FOPI ), ( AOPT, AOPI )                        01309000      EQUIVALENCE ( FILESIZE, FILESIZE_ARR )                            01310000                                                                        01311000      FOPI = BI_(2)                                                     01312000      AOPI = BI_(3)                                                     01313000                                                                        01314000C---  PRINT *,"FOPEN FOP=",FOPI                                         01315000C---  PRINT *,"FOPEN AOP=",AOPI                                         01316000                                                                        01317000      RECSIZE = BI_(4)                                                  01318000      RECSIZEB = RECSIZE * -1    !- NEGATION SIGNIFIES BYTES VS WORDS.  01319000      BLOCKFACTOR = BI_(5)                                              01320000      NUMBUFFERS = BI_(6)                                               01321000      FILESIZE_ARR(1) = BI_(7)                                          01322000      FILESIZE_ARR(2) = BI_(8)                                          01323000      NUMEXTENTS = BI_(9)                                               01324000      INITEXTENTS = BI_(10)                                             01325000      FILECODE = BI_(11)                                                01326000      L_KSAM = BI_(12)                                                  01327000      L_FNAME = BI_(13)                                                 01328000      L_DEVICE = BI_(14)                                                01329000                                                                        01330000      FNAME = "                              "                          01331000      DEVICEC = CHAR(13)                                                01332000      ERRNO = 0                                                         01333000                                                                        01334000      IF ( L_KSAM .GT. 0 ) THEN                                         01335000C---    PRINT *,"LOADING KSAM OPTIONS..."                               01336000        KSAM_PTR = 15                                                   01337000        KSAM_ARR(11) = BI_(KSAM_PTR)                                    01338000        KSAM_ARR(16) = BI_(KSAM_PTR + 1)                                01339000        KSAM_ARR(17) = BI_(KSAM_PTR + 2)                                01340000        KSAM_PTR = KSAM_PTR + 2                                         01341000        DO I=1,KSAM_ARR(17) * 4                                         01342000          KSAM_PTR = KSAM_PTR + 1                                       01343000          KSAM_ARR(I + 17) = BI_(KSAM_PTR)                              01344000        ENDDO                                                           01345000      ENDIF                                                             01346000                                                                        01347000C---  PRINT *,"TRYING TO PERFORM FOPEN()..."                            01348000      IF ( L_FNAME .GT. 0 ) THEN                                        01349000        FNAME(1:L_FNAME) = BIC_(29+L_KSAM:29+L_FNAME+L_KSAM-1)          01350000     *  // ";"                                                          01351000      ENDIF                                                             01352000                                                                        01353000      IF ( L_DEVICE .GT. 0 ) THEN                                       01354000        DEVICEC(1:L_DEVICE) =                                           01355000     *     BIC_(29+L_FNAME+L_KSAM:                                      01356000     *     29+L_FNAME+L_KSAM+L_DEVICE-1)                                01357000     *     // CHAR(13)                                                  01358000      ENDIF                                                             01359000                                                                        01360000C---  PRINT *,"FILENAME: ",FNAME                                        01361000C---  PRINT *," "                                                       01362000C---  PRINT *,"DEVICE: ",DEVICEC                                        01363000C---  PRINT *,"FILESIZE: ",FILESIZE                                     01364000C---  PRINT *,"INITEXTENTS: ",INITEXTENTS                               01365000C---  PRINT *,"NUMEXTENTS: ",NUMEXTENTS                                 01366000                                                                        01367000      FNUM = FOPEN(FNAME,FOPT,AOPT,RECSIZEB,DEVICEC,KSAM_ARR,,          01368000     *             BLOCKFACTOR,                                         01369000     *             NUMBUFFERS,FILESIZE,NUMEXTENTS,INITEXTENTS,          01370000     *             FILECODE)                                            01371000                                                                        01372000C     FNUM = FOPEN(FNAME,FOPT,AOPT,RECSIZEB,DEVICEC,KSAM_ARR,,          01373000C    *             BLOCKFACTOR,                                         01374000C    *             FILESIZE,NUMEXTENTS,INITEXTENTS,                     01375000C    *             FILECODE)                                            01376000                                                                        01377000      IF ( FNUM .LE. 0 ) THEN                                           01378000        CALL FCHECK( FNUM, ERRNO )                                      01379000      ENDIF                                                             01380000                                                                        01381000      CALL FFILEINFO( FNUM, 2, FOPT )                                   01382000      CALL FFILEINFO( FNUM, 3, AOPT )                                   01383000      CALL FFILEINFO( FNUM, 4, RECSIZE )                                01384000      CALL FFILEINFO( FNUM, 10, FILESIZE )                              01385000                                                                        01386000      IF ( RECSIZE .LT. 0 ) THEN                                        01387000        RECSIZE = RECSIZE * -1                                          01388000      ELSE                                                              01389000        RECSIZE = RECSIZE * 2                                           01390000      ENDIF                                                             01391000                                                                        01392000C     PRINT *,"FOPTIONS=",FOPI," AOPTIONS=",AOPI                        01393000C     PRINT *,"RECSIZE=",RECSIZE," FILESIZE=",FILESIZE                  01394000                                                                        01395000      BO_(1) = 7                                                        01396000      BO_(2) = ERRNO                                                    01397000      BO_(3) = FNUM                                                     01398000      BO_(4) = FOPI                                                     01399000      BO_(5) = AOPI                                                     01400000      BO_(6) = RECSIZE                                                  01401000      BO_(7) = FILESIZE_ARR(1)                                          01402000      BO_(8) = FILESIZE_ARR(2)                                          01403000                                                                        01404000      CALL SENDPACKET( 16 )                                             01405000                                                                        01406000      RETURN                                                            01407000      END                                                               01408000                                                                        01409000                                                                        01410000      SUBROUTINE FCLOSEXX()                                             01411000      IMPLICIT NONE                                                     01412000                                                                        01413000$INCLUDE 'TURBOCOM.ADBC211'                                             01414000                                                                        01415000      SYSTEM INTRINSIC FCLOSE, FCHECK                                   01416000                                                                        01417000      INTEGER*2 FNUM, ERRNO, DISPOSITION                                01418000                                                                        01419000C---  PRINT *,"CLOSING THE MPE FILE..."                                 01420000                                                                        01421000      FNUM = BI_(2)                                                     01422000      DISPOSITION = BI_(3)                                              01423000                                                                        01424000C---  PRINT *,"CLOSE FNUM=",FNUM                                        01425000C---  PRINT *,"CLOSE DISP=",DISPOSITION                                 01426000                                                                        01427000      ERRNO = 0                                                         01428000                                                                        01429000C---  PRINT *,"FCLOSE DISPOSITION: ",DISPOSITION                        01430000                                                                        01431000      CALL FCLOSE( FNUM, DISPOSITION, 0 )                               01432000                                                                        01433000      IF ( CCODE() ) 10,30,20                                           01434000                                                                        0143500010    CALL FCHECK( FNUM, ERRNO )                                        01436000      GOTO 30                                                           0143700020    ERRNO = -1                                                        0143800030    CONTINUE                                                          01439000                                                                        01440000      BO_(1) = 2                                                        01441000      BO_(2) = ERRNO                                                    01442000                                                                        01443000      CALL SENDPACKET( 4 )                                              01444000                                                                        01445000      RETURN                                                            01446000      END                                                               01447000                                                                        01448000                                                                        01449000      SUBROUTINE FREADXX()                                              01450000      IMPLICIT NONE                                                     01451000                                                                        01452000$INCLUDE 'TURBOCOM.ADBC211'                                             01453000                                                                        01454000      SYSTEM INTRINSIC FREAD, FCHECK, FREADBACKWARD, FREADDIR           01455000                                                                        01456000      INTEGER*2 FNUM, RECSIZE, ERRNO, L, INT4_ARR(2)                    01457000      INTEGER*4 INT4, RECNUM                                            01458000                                                                        01459000      EQUIVALENCE( INT4, INT4_ARR )                                     01460000                                                                        01461000C---  PRINT *,"ATTEMPTING AN FREAD()..."                                01462000                                                                        01463000      FNUM = BI_(2)                                                     01464000      RECSIZE = BI_(3)                                                  01465000      INT4_ARR(1) = BI_(4)                                              01466000      INT4_ARR(2) = BI_(5)                                              01467000      RECNUM = INT4                                                     01468000                                                                        01469000      RECSIZE = RECSIZE * -1                                            01470000                                                                        01471000      ERRNO = 0                                                         01472000      L = 0                                                             01473000                                                                        01474000      IF ( RECNUM .EQ. -1 ) THEN                                        01475000        L = FREAD( FNUM, DS_, RECSIZE )                                 01476000      ELSE IF ( RECNUM .EQ. -2 ) THEN                                   01477000        L = FREADBACKWARD( FNUM, DS_, RECSIZE )                         01478000      ELSE IF ( RECNUM .GE. 0 ) THEN                                    01479000        CALL FREADDIR( FNUM, DS_, RECSIZE, RECNUM )                     01480000        L = RECSIZE                                                     01481000      ENDIF                                                             01482000                                                                        01483000      IF ( CCODE() ) 10,30,20                                           01484000                                                                        0148500010    CALL FCHECK( FNUM, ERRNO )                                        01486000      GOTO 30                                                           0148700020    ERRNO = -1                                                        0148800030    CONTINUE                                                          01489000                                                                        01490000      !- IF LENGTH(L) IS NEGATIVE, CONVERT TO POSITIVE.                 01491000      !- IF LENGHT(L) IS POSITIVE CONVERT FROM WORDS TO BYTES.          01492000                                                                        01493000C---  PRINT *,"FREAD FILE: ",FNUM                                       01494000C---  PRINT *,"L: ",L                                                   01495000C---  PRINT *,"ERRNO: ",ERRNO                                           01496000                                                                        01497000      IF ( L .LE. 0 ) THEN                                              01498000        L = L * -1                                                      01499000      ELSE                                                              01500000        L = L * 2                                                       01501000      ENDIF                                                             01502000                                                                        01503000      BO_(1) = L + 2    !- INCLUDE ERRNO                                01504000      BO_(2) = ERRNO                                                    01505000                                                                        01506000      IF ( L .GT. 0 ) THEN                                              01507000        BOC_(5:5+L-1) = DSC_(1:L)                                       01508000      ENDIF                                                             01509000                                                                        01510000      CALL SENDPACKET( L + 4 )                                          01511000                                                                        01512000      RETURN                                                            01513000      END                                                               01514000                                                                        01515000                                                                        01516000                                                                        01517000      SUBROUTINE FWRITEXX()                                             01518000      IMPLICIT NONE                                                     01519000                                                                        01520000$INCLUDE 'TURBOCOM.ADBC211'                                             01521000                                                                        01522000      SYSTEM INTRINSIC FWRITE, FUPDATE, FWRITEDIR, FCHECK               01523000                                                                        01524000      INTEGER*2 FNUM, RECSIZE, ERRNO, L, CONTROLCODE, INT4_ARR(2)       01525000      INTEGER*4 INT4, RECNUM                                            01526000                                                                        01527000      EQUIVALENCE ( INT4, INT4_ARR )                                    01528000                                                                        01529000C---  PRINT *,"ATTEMPTING AN FWRITE()..."                               01530000                                                                        01531000      FNUM = BI_(2)                                                     01532000      RECSIZE = BI_(3)                                                  01533000      CONTROLCODE = BI_(4)                                              01534000      INT4_ARR(1) = BI_(5)                                              01535000      INT4_ARR(2) = BI_(6)                                              01536000      RECNUM = INT4                                                     01537000                                                                        01538000      DSC_(1:RECSIZE) = BIC_(13:13+RECSIZE-1)                           01539000                                                                        01540000C---  PRINT *,"RECNUM=",RECNUM                                          01541000C---  PRINT *,"DS_=",DSC_(1:RECSIZE)                                    01542000                                                                        01543000      ERRNO = 0                                                         01544000      RECSIZE = RECSIZE * -1                                            01545000                                                                        01546000      IF ( RECNUM .EQ. -1 ) THEN                                        01547000        CALL FWRITE( FNUM, DS_, RECSIZE, CONTROLCODE )                  01548000      ELSEIF ( RECNUM .EQ. -2 ) THEN                                    01549000        CALL FUPDATE( FNUM, DS_, RECSIZE )                              01550000      ELSE                                                              01551000        CALL FWRITEDIR( FNUM, DS_, RECSIZE, RECNUM )                    01552000      ENDIF                                                             01553000                                                                        01554000      IF ( CCODE() ) 10,30,20                                           01555000                                                                        0155600010    CALL FCHECK( FNUM, ERRNO )                                        01557000      GOTO 30                                                           0155800020    ERRNO = -1                                                        0155900030    CONTINUE                                                          01560000                                                                        01561000C---  PRINT *,"FWRITE FILE: ",FNUM                                      01562000C---  PRINT *,"ERRNO: ",ERRNO                                           01563000                                                                        01564000      BO_(1) = 2                                                        01565000      BO_(2) = ERRNO                                                    01566000                                                                        01567000      CALL SENDPACKET( 4 )                                              01568000                                                                        01569000      RETURN                                                            01570000      END                                                               01571000                                                                        01572000                                                                        01573000      SUBROUTINE FLOCKXX()                                              01574000      IMPLICIT NONE                                                     01575000                                                                        01576000      SYSTEM INTRINSIC FLOCK                                            01577000                                                                        01578000$INCLUDE 'TURBOCOM.ADBC211'                                             01579000                                                                        01580000      INTEGER*2 FNUM, LOCKFLAG, ERRNO                                   01581000      LOGICAL*2 LOCKFLAGL                                               01582000                                                                        01583000      EQUIVALENCE ( LOCKFLAG, LOCKFLAGL )                               01584000                                                                        01585000      FNUM = BI_(2)                                                     01586000      LOCKFLAG = BI_(3)                                                 01587000                                                                        01588000      ERRNO = 0                                                         01589000                                                                        01590000      CALL FLOCK( FNUM, LOCKFLAGL )                                     01591000      ERRNO = CCODE()                                                   01592000                                                                        01593000      BO_(1) = 2                                                        01594000      BO_(2) = ERRNO                                                    01595000                                                                        01596000      CALL SENDPACKET( 4 )                                              01597000                                                                        01598000      RETURN                                                            01599000      END                                                               01600000                                                                        01601000                                                                        01602000      SUBROUTINE FUNLOCKXX()                                            01603000      IMPLICIT NONE                                                     01604000                                                                        01605000      SYSTEM INTRINSIC FUNLOCK                                          01606000                                                                        01607000$INCLUDE 'TURBOCOM.ADBC211'                                             01608000                                                                        01609000      INTEGER*2 FNUM, ERRNO                                             01610000                                                                        01611000      FNUM = BI_(2)                                                     01612000                                                                        01613000      ERRNO = 0                                                         01614000                                                                        01615000      CALL FUNLOCK( FNUM )                                              01616000      ERRNO = CCODE()                                                   01617000                                                                        01618000      BO_(1) = 2                                                        01619000      BO_(2) = ERRNO                                                    01620000                                                                        01621000      CALL SENDPACKET( 4 )                                              01622000                                                                        01623000      RETURN                                                            01624000      END                                                               01625000                                                                        01626000                                                                        01627000      SUBROUTINE FPOINTXX()                                             01628000      IMPLICIT NONE                                                     01629000                                                                        01630000      SYSTEM INTRINSIC FPOINT, FCHECK                                   01631000                                                                        01632000$INCLUDE 'TURBOCOM.ADBC211'                                             01633000                                                                        01634000      INTEGER*2 FNUM, INT4_ARR(2), ERRNO                                01635000      INTEGER*4 INT4, RECNUM                                            01636000                                                                        01637000      FNUM = BI_(2)                                                     01638000      INT4_ARR(1) = BI_(3)                                              01639000      INT4_ARR(2) = BI_(4)                                              01640000                                                                        01641000      RECNUM = INT4                                                     01642000                                                                        01643000      CALL FPOINT( FNUM, RECNUM )                                       01644000      IF ( CCODE() ) 10,30,20                                           01645000                                                                        0164600010    CALL FCHECK( FNUM, ERRNO )                                        01647000      GOTO 30                                                           0164800020    ERRNO = -1                                                        0164900030    CONTINUE                                                          01650000                                                                        01651000      BO_(1) = 2                                                        01652000      BO_(2) = ERRNO                                                    01653000                                                                        01654000      CALL SENDPACKET( 4 )                                              01655000                                                                        01656000      RETURN                                                            01657000      END                                                               01658000                                                                        01659000                                                                        01660000$CONTROL LIST ON                                                        01661000                                                                        01662000      SUBROUTINE SPOOLMGR()                                             01663000      IMPLICIT NONE                                                     01664000                                                                        01665000      SYSTEM INTRINSIC COMMAND, FOPEN, FREAD, FCLOSE, FCHECK            01666000                                                                        01667000$INCLUDE 'TURBOCOM.ADBC211'                                             01668000                                                                        01669000      INTEGER IERR, IERR2,L, FNUM                                       01670000      INTEGER REC_LEN                                                   01671000      CHARACTER FNAME*24,COMIMAG*160,R*80                               01672000      LOGICAL REC(40), DONE                                             01673000C--   CHARACTER BOC_*30000                                              01674000      INTEGER I, LENGTH                                                 01675000                                                                        01676000      LOGICAL FOPT,AOPT                                                 01677000      INTEGER FOP,AOP                                                   01678000      EQUIVALENCE (FOPT,FOP),(AOPT,AOP)                                 01679000                                                                        01680000      EQUIVALENCE ( REC(1), R )                                         01681000                                                                        01682000      LENGTH = BI_(2)                                                   01683000                                                                        01684000      FNAME = "SP" // SID                                               01685000                                                                        01686000      IF ( LENGTH .GT. 2 ) THEN                                         01687000        COMIMAG = "LISTSPF O@;SELEQ=["//BIC_(5:LENGTH+4)//              01688000     *            "];DETAIL > "//FNAME//CHAR(13)                        01689000      ELSE                                                              01690000        COMIMAG = "LISTSPF O@;DETAIL > "//FNAME//CHAR(13)               01691000      END IF                                                            01692000      CALL COMMAND( COMIMAG,IERR,IERR2 )                                01693000      IF ( IERR .NE. 0 .OR. IERR2 .NE. 0 ) THEN                         01694000        REC_HDR(1) = 4                                                  01695000        REC_HDRCH(3:4) = "ER"                                           01696000        REC_HDR(3) = IERR                                               01697000        BOC_(1:6) = REC_HDRCH(1:6)                                      01698000        CALL SENDPACKET(6)                                              01699000        RETURN                                                          01700000      ENDIF                                                             01701000                                                                        01702000      FOP = 6B                                                          01703000      AOP = 300B                                                        01704000                                                                        01705000      FNUM  = FOPEN(FNAME,FOPT,AOPT,-80 )                               01706000                                                                        01707000      I=5                                                               01708000      BOC_ = "               "                                          01709000                                                                        01710000      DONE = .FALSE.                                                    01711000      DO WHILE ( .NOT. DONE )                                           01712000        R = "      "                                                    01713000        REC_LEN = FREAD( FNUM, REC, -80 )                               01714000        IF( CCODE() ) 190,200,999                                       01715000                                                                        01716000190     CONTINUE                                                        01717000        CALL FCHECK( FNUM, IERR )                                       01718000        REC_HDR(1) = 4                                                  01719000        REC_HDRCH(3:4) = "ER"                                           01720000        REC_HDR(3) = IERR                                               01721000        BOC_(1:6) = REC_HDRCH(1:6)                                      01722000        CALL SENDPACKET(6)                                              01723000        RETURN                                                          01724000                                                                        01725000200     CONTINUE                                                        01726000                                                                        01727000        IF ( R(1:1) .EQ. "#" ) THEN                                     01728000                                                                        01729000          BOC_(I:I+5) = R(2:7)     !-SPOOLID                            01730000          I = I + 6                                                     01731000          BOC_(I:I+5) = R(12:17)   !-JOBNUM                             01732000          I = I + 6                                                     01733000          BOC_(I:I+7) = R(21:28)   !-FILEDES                            01734000          I = I + 8                                                     01735000          BOC_(I:I+1) = R(31:32)   !-PRI                                01736000          I = I + 2                                                     01737000          BOC_(I:I+4) = R(35:39)   !-COPIES                             01738000          I = I + 5                                                     01739000          BOC_(I:I+7) = R(41:48)   !-DEV                                01740000          I = I + 8                                                     01741000          BOC_(I:I+5) = R(50:55)   !-STATE                              01742000          I = I + 6                                                     01743000          BOC_(I:I+4) = R(57:61)   !-RSPFN                              01744000          I = I + 5                                                     01745000          BOC_(I:I+16)= R(63:79)   !-OWNER                              01746000          I = I + 17                                                    01747000                                                                        01748000          R = "   "                                                     01749000          REC_LEN = FREAD( FNUM, REC, -80 )                             01750000          IF( CCODE() ) 999,220,999                                     01751000220       CONTINUE                                                      01752000                                                                        01753000          BOC_(I:I+7) = R(12:19)   !-FORMID                             01754000          I = I + 8                                                     01755000          BOC_(I:I+7) = R(21:28)   !-JOBNAME                            01756000          I = I + 8                                                     01757000          BOC_(I:I+4) = R(35:39)   !-COPSRM                             01758000          I = I + 5                                                     01759000          BOC_(I:I+7) = R(41:48)   !-SECTS                              01760000          I = I + 8                                                     01761000          BOC_(I:I+5) = R(50:55)   !-RECS                               01762000          I = I + 6                                                     01763000          BOC_(I:I+4) = R(57:61)   !-PAGES                              01764000          I = I + 5                                                     01765000          BOC_(I:I+13) =R(63:76)   !-DATE/TIME                          01766000          I = I + 14                                                    01767000                                                                        01768000          IF ( I + 117 .GE. 30000 ) THEN                                01769000            REC_HDR(1) = I - 3                                          01770000            REC_HDRCH(3:4) = "DT"                                       01771000            BOC_(1:4) = REC_HDRCH(1:4)                                  01772000            CALL SENDPACKET( I - 1 )                                    01773000            I = 5                                                       01774000          ENDIF                                                         01775000                                                                        01776000        END IF                                                          01777000                                                                        01778000      ENDDO                                                             01779000                                                                        01780000999   CONTINUE                                                          01781000                                                                        01782000      REC_HDR(1) = I - 3                                                01783000      REC_HDRCH(3:4) = "EO"                                             01784000      BOC_(1:4) = REC_HDRCH(1:4)                                        01785000      CALL SENDPACKET( I - 1 )                                          01786000                                                                        01787000      CALL FCLOSE( FNUM, 4, 0 )   !- DELETE THE TEMP FILE(OPTION 4)     01788000                                                                        01789000      RETURN                                                            01790000      END                                                               01791000                                                                        01792000$CONTROL LIST ON                                                        01793000                                                                        01794000$CHECK_ACTUAL_PARM 0                                                    01795000$CHECK_FORMAL_PARM 0                                                    01796000                                                                        01797000$INCLUDE 'DATAPROC.ADBC211'                                             01798000                                                                        01799000$literal_alias on                                                       01800000      SUBROUTINE FINDPROC( PLABEL, STATUS )                             01801000      IMPLICIT NONE                                                     01802000                                                                        01803000      SYSTEM INTRINSIC HPGETPROCPLABEL                                  01804000      EXTERNAL PLABEL                                                   01805000                                                                        01806000$INCLUDE 'TURBOCOM.ADBC211'                                             01807000                                                                        01808000C---  CHARACTER CAPROC(64)*1, FIRSTFILE*40                              01809000      CHARACTER CAPROC*64, FIRSTFILE*40                                 01810000      INTEGER*2 NUMPARMS, PROCLEN, FIRSTLEN                             01811000      INTEGER*2 PROCSTART, FIRSTSTART                                   01812000      INTEGER*4 STATUS                                                  01813000      INTEGER*4 SECSTATUS                                               01814000      CHARACTER PASSPROC*64                                             01815000                                                                        01816000$alias GETP = 'HPGETPROCPLABEL' Pascal (%VAL,%REF,%REF,%REF,%REF,%VAL)  01817000                                                                        01818000      PROCLEN  = BI_(4)                                                 01819000      FIRSTLEN = BI_(5)                                                 01820000      NUMPARMS = BI_(7)                                                 01821000      PROCSTART = (8 + (NUMPARMS * 3)) * 2 - 1                          01822000      FIRSTSTART = PROCSTART + PROCLEN                                  01823000C     PRINT *,"PROCSTART=",PROCSTART," FIRSTSTART=",FIRSTSTART          01824000      CAPROC = "      "                                                 01825000      CAPROC(2:2+PROCLEN-1) = BIC_(PROCSTART:PROCSTART+PROCLEN-1)       01826000      FIRSTFILE = "      "                                              01827000      FIRSTFILE(2:2+FIRSTLEN-1) =                                       01828000     *        BIC_(FIRSTSTART:FIRSTSTART+FIRSTLEN-1)                    01829000C---  CAPROC = " PRXL "                                                 01830000      STATUS = 0                                                        01831000C---  FIRSTFILE = " DYNXL.EVAN.THATCHER "                               01832000                                                                        01833000C---- CALL HPGETPROCPLABEL( 4,CAPROC,PLABEL, STATUS, FIRSTFILE, .TRUE.) 01834000C     PRINT *,"CAPROC=",CAPROC                                          01835000      CALL GETP( 4, CAPROC, PLABEL, STATUS, FIRSTFILE, 0 )              01836000                                                                        01837000C     PRINT *,"HPGETPROCPLABEL STATUS = ",STATUS                        01838000                                                                        01839000      IF ( STATUS .EQ. 0 ) THEN                                         01840000        PASSPROC = CAPROC                                               01841000        CALL ADBCSECURITY(SECSTATUS, PASSPROC)                          01842000        STATUS = SECSTATUS                                              01843000      ENDIF                                                             01844000                                                                        01845000      RETURN                                                            01846000      END                                                               01847000                                                                        01848000      SUBROUTINE PROC()                                                 01849000      IMPLICIT NONE                                                     01850000$INCLUDE 'TURBOCOM.ADBC211'                                             01851000                                                                        01852000      INTEGER*4 PLABEL, STATUS                                          01853000      INTEGER*2 PLABELI(2)                                              01854000      INTEGER*2 INTRIN_TYPE                                             01855000      INTEGER*4 SECSTATUS                                               01856000                                                                        01857000      EQUIVALENCE ( PLABEL, PLABELI )                                   01858000                                                                        01859000      PLABELI(1) = BI_(2)                                               01860000      PLABELI(2) = BI_(3)                                               01861000      INTRIN_TYPE = BI_(6)                                              01862000                                                                        01863000      STATUS = 0J                                                       01864000                                                                        01865000                                                                        01866000      IF ( PLABEL .EQ. -32767 ) THEN                                    01867000        CALL FINDPROC( PLABEL, STATUS )                                 01868000      ENDIF                                                             01869000                                                                        01870000      IF ( STATUS .EQ. 0J ) THEN                                        01871000        IF ( INTRIN_TYPE .EQ. 0 ) THEN                                  01872000          CALL DV( PLABEL, 6 )                                          01873000        ELSE                                                            01874000          CALL DF( PLABEL, 6 )                                          01875000        ENDIF                                                           01876000      ENDIF                                                             01877000                                                                        01878000      BO_(2) = STATUS                                                   01879000      BO_(3) = PLABELI(1)                                               01880000      BO_(4) = PLABELI(2)                                               01881000                                                                        01882000      CALL SENDPACKET( BO_(1) + 2 )                                     01883000C     PRINT *,"BIC_(61:78)=",BIC_(61:78)                                01884000                                                                        01885000      RETURN                                                            01886000      END                                                               01887000                                                                        01888000                                                                        01889000      SUBROUTINE DCLOSE()                                               01890000      IMPLICIT NONE                                                     01891000                                                                        01892000$INCLUDE 'TURBOCOM.ADBC211'                                             01893000                                                                        01894000      CALL DBCLOSE( BI_(2), BI_(3), BI_(4), STATS )                     01895000      BO_(1) = 2   !LENGTH                                              01896000      BO_(2) = STATS(1)                                                 01897000                                                                        01898000      CALL SENDPACKET( 4 )                                              01899000                                                                        01900000      RETURN                                                            01901000      END                                                               01902000                                                                        01903000                                                                        01904000      SUBROUTINE TRX()                                                  01905000      IMPLICIT NONE                                                     01906000                                                                        01907000      SYSTEM INTRINSIC DBXBEGIN,DBXUNDO,DBXEND                          01908000                                                                        01909000$INCLUDE 'TURBOCOM.ADBC211'                                             01910000                                                                        01911000      INTEGER*2 MODE                                                    01912000                                                                        01913000C     BI_(2) - DB, BI_(3) - TRANTYPE, BI_(4) - TRANS MODE               01914000C     BI_(5) - LOGTEXT LENGTH                                           01915000C     BIC_(9:9+BI_(4)) LOGTEXT - IF LEN = 0, BIC_(9:9)                  01916000                                                                        01917000C     PRINT *,"BI_(4)=",BI_(4)                                          01918000C     PRINT *,"BI_(2)=",BI_(2)                                          01919000                                                                        01920000      MODE = BI_(4)                                                     01921000                                                                        01922000      IF ( BI_(3) .EQ. 1 ) THEN                                         01923000        CALL DBXBEGIN( BI_(2), BIC_(11:11+BI_(5)), MODE, STATS, BI_(5) )01924000      ELSEIF ( BI_(3) .EQ. 2 ) THEN                                     01925000        CALL DBXUNDO( BI_(2), BIC_(11:11+BI_(5)), MODE, STATS, BI_(5) ) 01926000      ELSEIF ( BI_(3) .EQ. 3 ) THEN                                     01927000        CALL DBXEND( BI_(2), BIC_(11:11+BI_(5)), MODE, STATS, BI_(5) )  01928000      ENDIF                                                             01929000                                                                        01930000      BO_(1) = 2                                                        01931000      BO_(2) = STATS(1)                                                 01932000                                                                        01933000      CALL SENDPACKET( 4 )                                              01934000                                                                        01935000      RETURN                                                            01936000      END                                                               01937000                                                                        01938000$CONTROL LIST OFF                                                       01939000                                                                        01940000      CHARACTER*6 FUNCTION  GETSID( SOCK )                              01941000      IMPLICIT NONE                                                     01942000                                                                        01943000      INTEGER*4 SOCK,X,M                                                01944000      INTEGER*2 I                                                       01945000      CHARACTER S*6                                                     01946000                                                                        01947000      I = 1                                                             01948000      X = SOCK                                                          01949000                                                                        01950000      S = "      "                                                      01951000                                                                        01952000      DO WHILE ( X .GT. 0 )                                             01953000        M = MOD( X, 36 )                                                01954000        IF ( M .LE. 25 ) THEN                                           01955000          S(I:I) = CHAR( M + 65 )                                       01956000        ELSE                                                            01957000          M = M - 26                                                    01958000          S(I:I) = CHAR( M + 48 )                                       01959000        ENDIF                                                           01960000        I = I + 1                                                       01961000        X = X / 36                                                      01962000      ENDDO                                                             01963000      GETSID = S                                                        01964000                                                                        01965000      RETURN                                                            01966000      END                                                               01967000                                                                        01968000                                                                        01969000      SUBROUTINE GETPW( COMD, NAME, PASSWORD, IERR )                    01970000      IMPLICIT NONE                                                     01971000                                                                        01972000C     - CMD IS THE SUFFIX FOR THE LIST<CMD> COMMAND.  IT SHOULD         01973000C     - BE EITHER "USER" WHICH WILL YIELD THE "LISTUSER" COMMAND        01974000C     - OR IS SHOULD BE "ACCT" WHICH WILL PERFORM THE "LISTACCT"        01975000C     - COMMAND.                                                        01976000                                                                        01977000      SYSTEM INTRINSIC FREAD, FOPEN, COMMAND, FCHECK, FERRMSG, FCLOSE   01978000                                                                        01979000$INCLUDE 'TURBOCOM.ADBC211'                                             01980000                                                                        01981000      INTEGER*2 IERR, IERR1, IERR2                                      01982000      INTEGER*2 FNUM, FOP, AOP, ERRL, L, I                              01983000      LOGICAL FOPT,AOPT,FMSGL(40),REC(40)                               01984000      CHARACTER COMD*4, NAME*20                                         01985000      CHARACTER COMMST*80,FNUMST*30,FMSG*80,RECST*80,PASSWORD*8         01986000      CHARACTER PINST*6                                                 01987000                                                                        01988000      EQUIVALENCE (FOP,FOPT),(AOP,AOPT)                                 01989000      EQUIVALENCE (FMSG,FMSGL),(RECST,REC)                              01990000                                                                        01991000      WRITE(PINST,'(I6.6)') PIN                                         01992000C--   FNUMST = "LI" // SID                                              01993000      FNUMST = "LI" // PINST                                            01994000C--   COMMST = "LIST"//CMD//" "//NAME//";PASS > FTMPF" // CHAR(13)      01995000      COMMST = "LIST"//COMD//" "//NAME//";PASS > " // FNUMST // CHAR(13)01996000C     PRINT *,"COMMST=",COMMST                                          01997000      CALL COMMAND( COMMST , IERR1, IERR2 )                             01998000C     PRINT *,"IERR1=",IERR1," IERR2=",IERR2                            01999000      IERR = IERR2                                                      02000000      IF ( IERR1 .NE. 0 ) IERR = IERR1                                  02001000                                                                        02002000      FOP = 106B                                                        02003000      AOP = 45B                                                         02004000                                                                        02005000      FNUM = FOPEN( FNUMST, FOPT, AOPT )                                02006000C     PRINT *,"FNUM=",FNUM                                              02007000                                                                        02008000      IF ( FNUM .LE. 0 ) THEN                                           02009000        CALL FCHECK( FNUM, IERR1 )                                      02010000C       PRINT *,"FNUM IERR1=",IERR1                                     02011000        CALL FERRMSG( IERR1, FMSGL, ERRL )                              02012000        PRINT *,"MSG=",FMSG                                             02013000      ELSE                                                              02014000        DO I=1,4                                                        02015000          L = FREAD(FNUM,REC,-80)                                       02016000C         PRINT *,RECST                                                 02017000        ENDDO                                                           02018000        PASSWORD = RECST(43:50)                                         02019000C       PRINT *,"PASSWORD=",PASSWORD                                    02020000      ENDIF                                                             02021000                                                                        02022000      CALL FCLOSE( FNUM, 4B, 1B )                                       02023000                                                                        02024000      RETURN                                                            02025000      END                                                               02026000                                                                        02027000                                                                        02028000      SUBROUTINE LOGIN( LOGGED_IN )                                     02029000      IMPLICIT NONE                                                     02030000                                                                        02031000      SYSTEM INTRINSIC PROCINFO                                         02032000                                                                        02033000$INCLUDE 'TURBOCOM.ADBC211'                                             02034000                                                                        02035000      LOGICAL LOGGED_IN                                                 02036000      CHARACTER SESSNAME*8, USERNAME*8, USERPW*8, ACCTNAME*8, ACCTPW*8  02037000      CHARACTER LOGINBUF*20                                             02038000      CHARACTER USERPW2*8, ACCTPW2*8,IPADDR*16                          02039000      INTEGER*2 IERR,IERR1,IERR2                                        02040000                                                                        02041000      SESSNAME = BIC_(3:10)                                             02042000      USERNAME = BIC_(11:18)                                            02043000      USERPW   = BIC_(19:26)                                            02044000      ACCTNAME = BIC_(27:34)                                            02045000      ACCTPW   = BIC_(35:42)                                            02046000      IPADDR   = BIC_(43:58)                                            02047000                                                                        02048000C     PRINT *,"SESS=",SESSNAME," USR=",USERNAME,"USRPW=",USERPW         02049000C     PRINT *,"ACCT=",ACCTNAME," ACCTPW=",ACCTPW                        02050000C     PRINT *,"IPADDR=",IPADDR                                          02051000                                                                        02052000      IERR = 0                                                          02053000                                                                        02054000      LOGINBUF = USERNAME // "." // ACCTNAME                            02055000      CALL PROCINFO(IERR1,IERR2,0,1,PIN)                                02056000      CALL GETPW( "USER", LOGINBUF, USERPW2, IERR )                     02057000                                                                        02058000      IF ( IERR .EQ. 0 .AND. USERPW2 .NE. USERPW ) IERR = 1             02059000      IF ( IERR .EQ. 0 ) THEN                                           02060000        LOGINBUF = ACCTNAME                                             02061000        CALL GETPW( "ACCT", LOGINBUF, ACCTPW2, IERR )                   02062000        IF ( IERR .EQ. 0 .AND. ACCTPW .NE. ACCTPW2 ) IERR = 2           02063000      ENDIF                                                             02064000                                                                        02065000C--   CALL PROCINFO(IERR1,IERR2,0,1,PIN)                                02066000                                                                        02067000      LOGGED_IN = .FALSE.                                               02068000      IF ( IERR .EQ. 0 ) LOGGED_IN = .TRUE.                             02069000                                                                        02070000      BO_(1) = 2                                                        02071000      BO_(2) = IERR                                                     02072000      BO_(3) = PIN                                                      02073000      CALL SENDPACKET( 6 )                                              02074000                                                                        02075000      RETURN                                                            02076000      END                                                               02077000                                                                        02078000                                                                        02079000      SUBROUTINE MAIN                                                   02080000      IMPLICIT NONE                                                     02081000                                                                        02082000C----$INCLUDE 'FILDEF.INCLUDE'                                          02083000$INCLUDE 'TURBOCOM.ADBC211'                                             02084000                                                                        02085000      SYSTEM INTRINSIC IPCCREATE, IPCLOOKUP, IPCCONNECT, IPCSEND        02086000      SYSTEM INTRINSIC IPCSHUTDOWN, IPCERRMSG, ADDOPT, INITOPT, READOPT 02087000      SYSTEM INTRINSIC IPCRECVCN, IPCRECV, IPCNAME, IPCGIVE, IPCGET     02088000      SYSTEM INTRINSIC IPCCONTROL, IOWAIT, IPCCHECK                     02089000      SYSTEM INTRINSIC GETINFO                                          02090000                                                                        02091000      INTEGER*4 CD, RESULT, NEWRESULT, LN, LN2, SNUM, VCNEW             02092000      INTEGER*4 INT2                                                    02093000      INTEGER*2 RESULT16, FNUM                                          02094000      INTEGER*2 DATALENGTH, OPTIONCODE, CSTATION, ERROR, LNGTH          02095000      INTEGER*2 II, L, GOODX, BYTES_RECEIVED                            02096000      INTEGER*2 PARM2, IERR, VC_ID                                      02097000      CHARACTER ERR*80, BUFFER*30000                                    02098000      CHARACTER CINT2*2, FNAME*24                                       02099000      CHARACTER VC_ST*24                                                02100000      LOGICAL ISERROR, REMOTEISUP                                       02101000      LOGICAL RECORD_READY, CMD_READY, LENGTH_MODE                      02102000      LOGICAL LERR, REC(384)                                            02103000      INTEGER*2 IDUM                                                    02104000      INTEGER*2 DB,DS                                                   02105000      INTEGER*2 J,K,M,N,NUM_FIELDS,SIZE,OFFSET                          02106000      INTEGER*4 SIZE_ACC                                                02107000      CHARACTER DS_CH*16,INFOST*7                                       02108000      CHARACTER*6 GETSID                                                02109000      LOGICAL LOGGED_IN                                                 02110000                                                                        02111000      INTEGER*4 ERR1, ERR2, ERR3, ERR4, ERR5                            02112000                                                                        02113000      EQUIVALENCE (INT2, CINT2)                                         02114000                                                                        02115000      EQUIVALENCE (DS,DS_CH)                                            02116000                                                                        02117000      IERR = GETINFO(INFOST,7,PARM2)                                    02118000      IF ( INFOST .EQ. "VERSION" .OR. INFOST .EQ. "version" ) THEN      02119000        PRINT *,"ADBC Version 2.1.9b"                                   02120000        RETURN                                                          02121000      ENDIF                                                             02122000                                                                        02123000      IF ( PARM2 .EQ. 0 ) RETURN                                        02124000                                                                        02125000      VC_ID = PARM2                                                     02126000      WRITE(VC_ST,'("VC",I6.6)') VC_ID                                  02127000                                                                        02128000C     PRINT *,"CHILD - VC_ID=",VC_ID                                    02129000C     PRINT *,"CHILD - VC_ST=",VC_ST                                    02130000                                                                        02131000      REMOTEISUP = .FALSE.                                              02132000      LOGGED_IN = .FALSE.                                               02133000C     LOGGED_IN = .TRUE.   !Changed to disallow user login functionality02134000                           !Change back to .FALSE. to renable.          02135000                                                                        02136000      RESULT = 0                                                        02137000      RESULT16 = 0                                                      02138000      INT2 = 0                                                          02139000      NETWORK_ERROR = 0                                                 02140000                                                                        02141000      CALL IPCGET(VC_ST,8,INT2,VCNEW,RESULT)                            02142000      IF ( ISERROR(RESULT,100) ) GOTO 9999                              02143000                                                                        02144000      CALL IPCCONTROL( VCNEW, 3, CINT2, 2,,,,RESULT )                   02145000      IF ( ISERROR( RESULT,110 ) ) GOTO 9999                            02146000                                                                        02147000      CALL IPCCONTROL( VCNEW, 1,,,,,, RESULT )                          02148000      IF ( ISERROR( RESULT,120 ) ) GOTO 9999                            02149000                                                                        02150000      !- ENABLE NOWAIT RECIEIVES, DISABLE NOWAIT SENDS.                 02151000                                                                        02152000C     CALL IPCCONTROL( VCNEW, 256,,,,,, RESULT )                        02153000C     IF ( ISERROR( RESULT,125 ) ) GOTO 9999                            02154000                                                                        02155000      LN2 = 2      ! GET THE LENGTH OF EXPECTED RECORD FIRST.           02156000      CALL IPCRECV( VCNEW, BUFFER, LN2,,, RESULT )                      02157000C     PRINT *,"PRIOR TO IPCRECV, INITIAL..."                            02158000      IF ( ISERROR( RESULT,130 ) ) GOTO 9999                            02159000      VC = VCNEW                                                        02160000      REMOTEISUP = .TRUE.                                               02161000                                                                        02162000      SID = GETSID( VC )                                                02163000                                                                        02164000C     FNAME = "IPCMSG.ADBC211  "                                        02165000C     CALL OP_MESS_FILE(FNAME,MF_INPUT,FNUM,IOW,ERROR)                  02166000C     CALL OP_MESS_FILE(FNAME,MF_OUTPUT,FNUM2,NO_IOW,ERROR)             02167000C       CALL FCONTROL(FNUM,45,1)                                        02168000C       CALL FCONTROL(FNUM,41,1)                                        02169000                                                                        02170000C     PRINT *,"Connection Established..."                               02171000                                                                        02172000      LENGTH_MODE = .TRUE.                                              02173000      RECORD_READY = .FALSE.                                            02174000      CMD_READY = .FALSE.                                               02175000      BYTES_RECEIVED = 0                                                02176000      NUMSENDS = 0                                                      02177000C--   BF = 1                                                            02178000                                                                        02179000      II = 0                                                            02180000      DO WHILE ( NETWORK_ERROR .EQ. 0 )                                 02181000        SNUM = IOWAIT(0,REC,LNGTH,CSTATION)                             02182000        GOODX = CCODE()                                                 02183000        IF ( GOODX .NE. 0 ) THEN                                        02184000                    CALL IPCCHECK(VC,ERR2,ERR3,ERR4)                    02185000          IF ( ERR2 .NE. 64 ) THEN                                      02186000            PRINT *,"IOWAIT ERROR(Beginning) = ",GOODX                  02187000                    PRINT *," ERR2=",ERR2," ERR3=",ERR3                 02188000                    PRINT *,"ERR4=",ERR4                                02189000          ELSE                                                          02190000C           PRINT *,"Connection Terminated..."                          02191000          ENDIF                                                         02192000          GOTO 9999                                                     02193000        ENDIF                                                           02194000        IF ( SNUM .EQ. VC ) THEN                                        02195000          IF ( GOODX .EQ. 1 ) THEN                                      02196000            REMOTEISUP = .FALSE.                                        02197000            CALL IPCSHUTDOWN( VC )                                      02198000          ELSEIF ( CSTATION .EQ. 0 ) THEN                               02199000            IF ( LENGTH_MODE ) THEN                                     02200000              BLENC_(BYTES_RECEIVED+1:BYTES_RECEIVED+LNGTH)             02201000     *        = BUFFER(1:LNGTH)                                         02202000              BYTES_RECEIVED = BYTES_RECEIVED + LNGTH                   02203000              IF ( BYTES_RECEIVED .EQ. 2 ) THEN                         02204000C---CHECK LATER-BLEN_ = BLEN_ - 2                                       02205000                LN2 = BLEN_                                             02206000                CALL IPCRECV( VC, BUFFER, LN2,,,RESULT)                 02207000                IF ( ISERROR( RESULT,200) ) GOTO 9999                   02208000                LENGTH_MODE = .FALSE.                                   02209000                BYTES_RECEIVED = 0                                      02210000C               PRINT *,"BYTES EXPECTING=",BLEN_                        02211000              ELSE                                                      02212000                LN2 = 2 - BYTES_RECEIVED                                02213000                CALL IPCRECV( VC, BUFFER, LN2,,,RESULT)                 02214000                IF ( ISERROR( RESULT,210) ) GOTO 9999                   02215000              ENDIF                                                     02216000            ELSE                                                        02217000              BIC_(BYTES_RECEIVED+1:BYTES_RECEIVED+LNGTH)               02218000     *        = BUFFER(1:LNGTH)                                         02219000              BYTES_RECEIVED = BYTES_RECEIVED + LNGTH                   02220000C             PRINT *,"BYTES_RECEIVED=",BYTES_RECEIVED                  02221000C             PRINT *,"BUFFER(1:LNGTH)=",BUFFER(1:LNGTH)                02222000              IF ( BYTES_RECEIVED .EQ. BLEN_ ) THEN                     02223000                LN2 = 2                                                 02224000C               CALL IPCRECV( VC, BUFFER, LN2,,,RESULT)                 02225000C               IF ( ISERROR( RESULT, 220 ) ) GOTO 9999                 02226000                LENGTH_MODE = .TRUE.                                    02227000                BYTES_RECEIVED = 0                                      02228000                RECORD_READY = .TRUE.                                   02229000              ELSE                                                      02230000                LN2 = BLEN_ - BYTES_RECEIVED                            02231000                CALL IPCRECV( VC, BUFFER, LN2,,,RESULT)                 02232000                IF ( ISERROR( RESULT, 230 ) ) GOTO 9999                 02233000              ENDIF                                                     02234000            ENDIF                                                       02235000          ELSE                                                          02236000            PRINT *,"CSTATION NOT ZERO..."                              02237000          ENDIF                                                         02238000        ENDIF                                                           02239000                                                                        02240000C       PRINT *, "LINE=",LN2                                            02241000        IF ( RECORD_READY ) THEN                                        02242000C         PRINT *,"RECORD IS READY, CMD = ",CMD                         02243000          IF ( CMD .EQ. "LI" ) THEN                                     02244000            CALL LOGIN( LOGGED_IN )                                     02245000          ELSEIF ( CMD .NE. "LI" .AND. .NOT. LOGGED_IN ) THEN           02246000            GOTO 9999                                                   02247000          ELSEIF ( CMD .EQ. "OP" ) THEN                                 02248000            CALL DBOPENXX()                                             02249000          ELSEIF ( CMD .EQ. "DS" ) THEN                                 02250000            CALL DATASETINFO()                                          02251000          ELSEIF ( CMD .EQ. "GD" ) THEN                                 02252000            CALL GETDATASETS()                                          02253000          ELSEIF ( CMD .EQ. "RE" ) THEN                                 02254000            CALL TBGET(DB,DS,SERIAL)                                    02255000          ELSEIF ( CMD .EQ. "LO" ) THEN                                 02256000            CALL DBLOCKXX()                                             02257000          ELSEIF ( CMD .EQ. "UL" ) THEN                                 02258000            CALL DBUNLOCKXX()                                           02259000          ELSEIF ( CMD .EQ. "PU" ) THEN                                 02260000            CALL TBPUT()                                                02261000          ELSEIF ( CMD .EQ. "UP" ) THEN                                 02262000            CALL TBUPDATE()                                             02263000          ELSEIF ( CMD .EQ. "DE" ) THEN                                 02264000            CALL TBDELETE()                                             02265000          ELSEIF ( CMD .EQ. "TR" ) THEN                                 02266000            CALL TBREFRESH()                                            02267000          ELSEIF ( CMD .EQ. "FO" ) THEN                                 02268000            CALL FOPENXX()                                              02269000          ELSEIF ( CMD .EQ. "FR" ) THEN                                 02270000            CALL FREADXX()                                              02271000          ELSEIF ( CMD .EQ. "FW" ) THEN                                 02272000            CALL FWRITEXX()                                             02273000          ELSEIF ( CMD .EQ. "FL" ) THEN                                 02274000            CALL FLOCKXX()                                              02275000          ELSEIF ( CMD .EQ. "FU" ) THEN                                 02276000            CALL FUNLOCKXX()                                            02277000          ELSEIF ( CMD .EQ. "FP" ) THEN                                 02278000            CALL FPOINTXX()                                             02279000          ELSEIF ( CMD .EQ. "FC" ) THEN                                 02280000            CALL FCLOSEXX()                                             02281000          ELSEIF ( CMD .EQ. "SP" ) THEN                                 02282000            CALL SPOOLMGR()                                             02283000          ELSEIF ( CMD .EQ. "PC" ) THEN                                 02284000            CALL PROC()                                                 02285000          ELSEIF ( CMD .EQ. "TX" ) THEN                                 02286000            CALL TRX()                                                  02287000          ELSEIF ( CMD .EQ. "DC" ) THEN                                 02288000            CALL DCLOSE()                                               02289000          ELSEIF ( CMD .EQ. "CL" ) THEN                                 02290000            NETWORK_ERROR = 32767   ! CLIENT CLOSING CONNECTION.        02291000          ELSE                                                          02292000            PRINT *,"UNKNOWN CMD RECEIVED=",CMD                         02293000          ENDIF                                                         02294000                                                                        02295000          RECORD_READY = .FALSE.                                        02296000                                                                        02297000            IF ( NETWORK_ERROR .EQ. 0 ) THEN                            02298000                LN2 = 2                                                 02299000                CALL IPCRECV( VC, BUFFER, LN2,,,RESULT)                 02300000                IF ( ISERROR( RESULT, 220 ) ) GOTO 9999                 02301000            ENDIF                                                       02302000                                                                        02303000        ENDIF                                                           02304000                                                                        02305000      ENDDO                                                             02306000                                                                        023070009999  CONTINUE                                                          02308000      CALL IPCSHUTDOWN( VC )                                            02309000                                                                        02310000      RETURN                                                            02311000      END                                                               02312000                                                                        02313000                                                                        02314000      SUBROUTINE SEND_TERMINATION( MESG )                               02315000      IMPLICIT NONE                                                     02316000                                                                        02317000$INCLUDE 'TURBOCOM.ADBC211'                                             02318000                                                                        02319000      CHARACTER MESG*2                                                  02320000                                                                        02321000      IF ( BUFF_PTR + 3 .GT. BUFF_SEND_SIZE ) THEN                      02322000        CALL SENDPACKET( BUFF_PTR - 1 )                                 02323000        BUFF_PTR = 1                                                    02324000      ENDIF                                                             02325000      REC_HDR(1) = 2 !- PACKET SIZE.                                    02326000      REC_HDRCH(3:4) = MESG                                             02327000      BOC_(BUFF_PTR:BUFF_PTR+3) = REC_HDRCH(1:4)                        02328000      BUFF_PTR = BUFF_PTR + 4                                           02329000      CALL SENDPACKET( BUFF_PTR - 1 )                                   02330000                                                                        02331000      RETURN                                                            02332000      END                                                               02333000                                                                        02334000                                                                        02335000      SUBROUTINE SEND_ERROR()                                           02336000      IMPLICIT NONE                                                     02337000                                                                        02338000$INCLUDE 'TURBOCOM.ADBC211'                                             02339000                                                                        02340000      INTEGER*2 ERRORI                                                  02341000      CHARACTER*2 ERRORCH                                               02342000                                                                        02343000      EQUIVALENCE (ERRORI,ERRORCH)                                      02344000                                                                        02345000      IF ( BUFF_PTR + 5 .GT. BUFF_SEND_SIZE ) THEN                      02346000        CALL SENDPACKET( BUFF_PTR - 1 )                                 02347000        BUFF_PTR = 1                                                    02348000      ENDIF                                                             02349000                                                                        02350000C-    REC_HDR(1) = 2 !- PACKET SIZE.                                    02351000      REC_HDR(1) = 4 !- PACKET SIZE.                                    02352000      REC_HDRCH(3:4) = "ER"                                             02353000      ERRORI = GOOD                                                     02354000                                                                        02355000      BOC_(BUFF_PTR:BUFF_PTR+3) = REC_HDRCH(1:4)                        02356000      BUFF_PTR = BUFF_PTR + 4                                           02357000      BOC_(BUFF_PTR:BUFF_PTR+1) = ERRORCH(1:2)                          02358000      BUFF_PTR = BUFF_PTR + 2                                           02359000                                                                        02360000      CALL SENDPACKET( BUFF_PTR - 1 )                                   02361000                                                                        02362000      RETURN                                                            02363000      END                                                               02364000                                                                        02365000                                                                        02366000      SUBROUTINE SENDPACKET( L )                                        02367000      IMPLICIT NONE                                                     02368000                                                                        02369000      SYSTEM INTRINSIC IOWAIT,IODONTWAIT                                02370000      SYSTEM INTRINSIC IPCSEND                                          02371000      SYSTEM INTRINSIC IPCCHECK                                         02372000      SYSTEM INTRINSIC TIMER                                            02373000                                                                        02374000$INCLUDE 'TURBOCOM.ADBC211'                                             02375000                                                                        02376000      INTEGER*2 L, GOODX, CSTATION                                      02377000      INTEGER*4 BO__LENGTH, RESULT, SNUM                                02378000      INTEGER*4 ERR1,ERR2,ERR3,ERR4                                     02379000      LOGICAL ISERROR                                                   02380000                                                                        02381000      BO__LENGTH = L                                                    02382000                                                                        02383000      NUMSENDS = NUMSENDS + 1                                           02384000                                                                        02385000      IF ( NETWORK_ERROR .NE. 0 ) RETURN                                02386000                                                                        02387000      CALL IPCSEND( VC, BOC_, BO__LENGTH,,, RESULT )                    02388000      IF ( ISERROR( RESULT,270 ) ) THEN                                 02389000         NETWORK_ERROR = 1                                              02390000      ELSE                                                              02391000          NUMSENDS = 0                                                  02392000          CSTATION = 0                                                  02393000          SNUM=0                                                        02394000          DO WHILE ( CSTATION .EQ. 0 .AND. SNUM .NE. VC)                02395000C           SNUM = IOWAIT( VC,BO_,,CSTATION)                            02396000            SNUM = IOWAIT( VC,BO_(1),,CSTATION)                         02397000            GOODX = CCODE()                                             02398000            NETWORK_ERROR = GOODX                                       02399000            IF ( GOODX .NE. 0 ) THEN                                    02400000              CALL IPCCHECK(VC,ERR2,ERR3,ERR4)                          02401000              IF ( ERR2 .NE. 64 ) THEN                                  02402000                PRINT *,"IOWAIT GOODX NOT ZERO..."                      02403000                PRINT *," ERR2=",ERR2," ERR3=",ERR3                     02404000                PRINT *,"ERR4=",ERR4                                    02405000              ENDIF                                                     02406000            ENDIF                                                       02407000          ENDDO                                                         02408000C--     IF ( BF .EQ. 2 ) THEN                                           02409000C--       BF = 0                                                        02410000C       ELSE                                                            02411000C         SNUM = IODONTWAIT( VC,BO_(1),,CSTATION)                       02412000C           GOODX = CCODE()                                             02413000C           NETWORK_ERROR = GOODX                                       02414000C           IF ( GOODX .NE. 0 ) THEN                                    02415000C             CALL IPCCHECK(VC,ERR2,ERR3,ERR4)                          02416000C             PRINT *,"IODONTWAIT GOODX NOT ZERO..."                    02417000C             PRINT *," ERR2=",ERR2," ERR3=",ERR3                       02418000C             PRINT *,"ERR4=",ERR4                                      02419000C           ENDIF                                                       02420000C--     ENDIF                                                           02421000C--     BF = BF + 1                                                     02422000      ENDIF                                                             02423000                                                                        02424000      RETURN                                                            02425000      END                                                               02426000                                                                        02427000                                                                        02428000$INCLUDE 'DTURBOCO.ADBC211'                                             02429000
